#FORMAT=WebAnno TSV 3.3
#T_SP=custom.Span|label


#Text=The Software Developer is responsible for development, maintenance, and on-going support of custom enterprise applications. this is not a Java Developer position...Skills Needed For Success: Strong experience building Web applications with Rest APIs integration of Microservices in .NET Core/framework technologies.
1-1	0-3	The	_	
1-2	4-12	Software	_	
1-3	13-22	Developer	_	
1-4	23-25	is	_	
1-5	26-37	responsible	_	
1-6	38-41	for	_	
1-7	42-53	development	_	
1-8	53-54	,	_	
1-9	55-66	maintenance	_	
1-10	66-67	,	_	
1-11	68-71	and	_	
1-12	72-80	on-going	_	
1-13	81-88	support	_	
1-14	89-91	of	_	
1-15	92-98	custom	_	
1-16	99-109	enterprise	_	
1-17	110-122	applications	_	
1-18	122-123	.	_	
1-19	124-128	this	_	
1-20	129-131	is	_	
1-21	132-135	not	_	
1-22	136-137	a	_	
1-23	138-142	Java	Hard Skill	
1-24	143-152	Developer	_	
1-25	153-161	position	_	
1-26	161-162	.	_	
1-27	162-163	.	_	
1-28	163-164	.	_	
1-29	164-170	Skills	_	
1-30	171-177	Needed	_	
1-31	178-181	For	_	
1-32	182-189	Success	_	
1-33	189-190	:	_	
1-34	191-197	Strong	_	
1-35	198-208	experience	_	
1-36	209-217	building	_	
1-37	218-221	Web	_	
1-38	222-234	applications	_	
1-39	235-239	with	_	
1-40	240-244	Rest	_	
1-41	245-249	APIs	_	
1-42	250-261	integration	_	
1-43	262-264	of	_	
1-44	265-278	Microservices	_	
1-45	279-281	in	_	
1-46	282-283	.	_	
1-47	283-286	NET	_	
1-48	287-291	Core	_	
1-49	291-292	/	_	
1-50	292-301	framework	_	
1-51	302-314	technologies	_	
1-52	314-315	.	_	

#Text=Strong full-stack developer with a proven track record of getting things done, but enjoys focusing more on backend development.
2-1	316-322	Strong	_	
2-2	323-333	full-stack	_	
2-3	334-343	developer	_	
2-4	344-348	with	_	
2-5	349-350	a	_	
2-6	351-357	proven	_	
2-7	358-363	track	_	
2-8	364-370	record	_	
2-9	371-373	of	_	
2-10	374-381	getting	_	
2-11	382-388	things	_	
2-12	389-393	done	_	
2-13	393-394	,	_	
2-14	395-398	but	_	
2-15	399-405	enjoys	_	
2-16	406-414	focusing	_	
2-17	415-419	more	_	
2-18	420-422	on	_	
2-19	423-430	backend	_	
2-20	431-442	development	_	
2-21	442-443	.	_	

#Text=Expert in two or more Integrated Development Environments and languages including C#, .NET core, Java scripting, Objective-C, Visual Studio, Eclipse, etc.
3-1	444-450	Expert	_	
3-2	451-453	in	_	
3-3	454-457	two	_	
3-4	458-460	or	_	
3-5	461-465	more	_	
3-6	466-476	Integrated	_	
3-7	477-488	Development	_	
3-8	489-501	Environments	_	
3-9	502-505	and	_	
3-10	506-515	languages	_	
3-11	516-525	including	_	
3-12	526-527	C	Hard Skill	
3-13	527-528	#	_	
3-14	528-529	,	_	
3-15	530-531	.	_	
3-16	531-534	NET	_	
3-17	535-539	core	_	
3-18	539-540	,	_	
3-19	541-545	Java	Hard Skill	
3-20	546-555	scripting	_	
3-21	555-556	,	_	
3-22	557-568	Objective-C	Hard Skill	
3-23	568-569	,	_	
3-24	570-576	Visual	_	
3-25	577-583	Studio	_	
3-26	583-584	,	_	
3-27	585-592	Eclipse	_	
3-28	592-593	,	_	
3-29	594-597	etc	_	
3-30	597-598	.	_	

#Text=Experience developing against common API technologies including REST and SOAP Experience with React.js framework development and development Experience with ASP.NET WebAPI and .NET Core Strong understanding of design patterns (MVVM, etc.), dependency injection Strong understanding of object-oriented design and development.
4-1	599-609	Experience	_	
4-2	610-620	developing	_	
4-3	621-628	against	_	
4-4	629-635	common	_	
4-5	636-639	API	Hard Skill	
4-6	640-652	technologies	_	
4-7	653-662	including	_	
4-8	663-667	REST	_	
4-9	668-671	and	_	
4-10	672-676	SOAP	_	
4-11	677-687	Experience	_	
4-12	688-692	with	_	
4-13	693-701	React.js	_	
4-14	702-711	framework	_	
4-15	712-723	development	_	
4-16	724-727	and	_	
4-17	728-739	development	_	
4-18	740-750	Experience	_	
4-19	751-755	with	_	
4-20	756-763	ASP.NET	_	
4-21	764-770	WebAPI	_	
4-22	771-774	and	_	
4-23	775-776	.	_	
4-24	776-779	NET	_	
4-25	780-784	Core	_	
4-26	785-791	Strong	_	
4-27	792-805	understanding	_	
4-28	806-808	of	_	
4-29	809-815	design	Hard Skill	
4-30	816-824	patterns	_	
4-31	825-826	(	_	
4-32	826-830	MVVM	Hard Skill	
4-33	830-831	,	_	
4-34	832-835	etc	_	
4-35	835-836	.	_	
4-36	836-837	)	_	
4-37	837-838	,	_	
4-38	839-849	dependency	_	
4-39	850-859	injection	_	
4-40	860-866	Strong	_	
4-41	867-880	understanding	_	
4-42	881-883	of	_	
4-43	884-899	object-oriented	_	
4-44	900-906	design	Hard Skill	
4-45	907-910	and	_	
4-46	911-922	development	_	
4-47	922-923	.	_	

#Text=Strong SQL experience and knowledge of entity framework strong knowledge of the REST API life cycle strong knowledge of React.js and responsive web design Experience with MuleSoft or other API integration platforms Understand and analyze system and SQL bottleneck, good troubleshooting skillsAdditional Skills: Experience with containerized application development and knowledge of Docker, Kubernetes or OpenShift Experience with production support and work in team environment with multiple interfaces Experience with CI / CD, AWS deployments Experience with Harness, Bamboo and UCD Experience working with Agile methodologies Experience in Test Driven Development (TDD) Vast knowledge of current trends in the common platform omnichannel architecture and technology Strong experience building Web applications with Rest APIs integration of Microservices in .NET Core/framework technologies Strong full-stack developer with a proven track record of getting things done, but enjoys focusing more on backend development Expert in two or more Integrated Development Environments and languages including C#, .NET core, Java scripting, Objective-C, Visual Studio, Eclipse, etc Experience developing against common API technologies including REST and SOAP Experience with React.js framework development and development Experience with ASP NET WebAPI and .NET Core Strong understanding of design patterns (MVVM, etc.), dependency injection Strong understanding of object-oriented design and development Strong SQL experience and knowledge of entity framework strong knowledge of the REST API life cycle strong knowledge of React.js and responsive web design Experience with MuleSoft or other API integration platforms Understand and analyze system and SQL bottleneck, good troubleshooting skills Experience with containerized application development and knowledge of Docker, Kubernetes or OpenShift Experience with production support and work in team environment with multiple interfaces Experience with CI / CD, AWS deployments Experience with Harness, Bamboo and UCD Experience working with Agile methodologies Experience in Test Driven Development (TDD) Vast knowledge of current trends in the common platform omnichannel architecture and technology The Software Developer is responsible for development, maintenance, and on-going support of custom enterprise applications
5-1	924-930	Strong	_	
5-2	931-934	SQL	Hard Skill	
5-3	935-945	experience	_	
5-4	946-949	and	_	
5-5	950-959	knowledge	_	
5-6	960-962	of	_	
5-7	963-969	entity	_	
5-8	970-979	framework	_	
5-9	980-986	strong	_	
5-10	987-996	knowledge	_	
5-11	997-999	of	_	
5-12	1000-1003	the	_	
5-13	1004-1008	REST	_	
5-14	1009-1012	API	Hard Skill	
5-15	1013-1017	life	_	
5-16	1018-1023	cycle	_	
5-17	1024-1030	strong	_	
5-18	1031-1040	knowledge	_	
5-19	1041-1043	of	_	
5-20	1044-1052	React.js	_	
5-21	1053-1056	and	_	
5-22	1057-1067	responsive	_	
5-23	1068-1071	web	_	
5-24	1072-1078	design	Hard Skill	
5-25	1079-1089	Experience	_	
5-26	1090-1094	with	_	
5-27	1095-1103	MuleSoft	_	
5-28	1104-1106	or	_	
5-29	1107-1112	other	_	
5-30	1113-1116	API	Hard Skill	
5-31	1117-1128	integration	_	
5-32	1129-1138	platforms	_	
5-33	1139-1149	Understand	_	
5-34	1150-1153	and	_	
5-35	1154-1161	analyze	_	
5-36	1162-1168	system	_	
5-37	1169-1172	and	_	
5-38	1173-1176	SQL	Hard Skill	
5-39	1177-1187	bottleneck	_	
5-40	1187-1188	,	_	
5-41	1189-1193	good	_	
5-42	1194-1209	troubleshooting	Hard Skill	
5-43	1210-1226	skillsAdditional	_	
5-44	1227-1233	Skills	_	
5-45	1233-1234	:	_	
5-46	1235-1245	Experience	_	
5-47	1246-1250	with	_	
5-48	1251-1264	containerized	_	
5-49	1265-1276	application	_	
5-50	1277-1288	development	_	
5-51	1289-1292	and	_	
5-52	1293-1302	knowledge	_	
5-53	1303-1305	of	_	
5-54	1306-1312	Docker	Hard Skill	
5-55	1312-1313	,	_	
5-56	1314-1324	Kubernetes	Hard Skill	
5-57	1325-1327	or	_	
5-58	1328-1337	OpenShift	_	
5-59	1338-1348	Experience	_	
5-60	1349-1353	with	_	
5-61	1354-1364	production	_	
5-62	1365-1372	support	_	
5-63	1373-1376	and	_	
5-64	1377-1381	work	_	
5-65	1382-1384	in	_	
5-66	1385-1389	team	_	
5-67	1390-1401	environment	_	
5-68	1402-1406	with	_	
5-69	1407-1415	multiple	_	
5-70	1416-1426	interfaces	_	
5-71	1427-1437	Experience	_	
5-72	1438-1442	with	_	
5-73	1443-1445	CI	_	
5-74	1446-1447	/	_	
5-75	1448-1450	CD	_	
5-76	1450-1451	,	_	
5-77	1452-1455	AWS	Hard Skill	
5-78	1456-1467	deployments	_	
5-79	1468-1478	Experience	_	
5-80	1479-1483	with	_	
5-81	1484-1491	Harness	_	
5-82	1491-1492	,	_	
5-83	1493-1499	Bamboo	_	
5-84	1500-1503	and	_	
5-85	1504-1507	UCD	_	
5-86	1508-1518	Experience	_	
5-87	1519-1526	working	_	
5-88	1527-1531	with	_	
5-89	1532-1537	Agile	Hard Skill	
5-90	1538-1551	methodologies	_	
5-91	1552-1562	Experience	_	
5-92	1563-1565	in	_	
5-93	1566-1570	Test	_	
5-94	1571-1577	Driven	_	
5-95	1578-1589	Development	_	
5-96	1590-1591	(	_	
5-97	1591-1594	TDD	_	
5-98	1594-1595	)	_	
5-99	1596-1600	Vast	_	
5-100	1601-1610	knowledge	_	
5-101	1611-1613	of	_	
5-102	1614-1621	current	_	
5-103	1622-1628	trends	_	
5-104	1629-1631	in	_	
5-105	1632-1635	the	_	
5-106	1636-1642	common	_	
5-107	1643-1651	platform	_	
5-108	1652-1663	omnichannel	_	
5-109	1664-1676	architecture	_	
5-110	1677-1680	and	_	
5-111	1681-1691	technology	_	
5-112	1692-1698	Strong	_	
5-113	1699-1709	experience	_	
5-114	1710-1718	building	_	
5-115	1719-1722	Web	_	
5-116	1723-1735	applications	_	
5-117	1736-1740	with	_	
5-118	1741-1745	Rest	_	
5-119	1746-1750	APIs	_	
5-120	1751-1762	integration	_	
5-121	1763-1765	of	_	
5-122	1766-1779	Microservices	_	
5-123	1780-1782	in	_	
5-124	1783-1784	.	_	
5-125	1784-1787	NET	_	
5-126	1788-1792	Core	_	
5-127	1792-1793	/	_	
5-128	1793-1802	framework	_	
5-129	1803-1815	technologies	_	
5-130	1816-1822	Strong	_	
5-131	1823-1833	full-stack	_	
5-132	1834-1843	developer	_	
5-133	1844-1848	with	_	
5-134	1849-1850	a	_	
5-135	1851-1857	proven	_	
5-136	1858-1863	track	_	
5-137	1864-1870	record	_	
5-138	1871-1873	of	_	
5-139	1874-1881	getting	_	
5-140	1882-1888	things	_	
5-141	1889-1893	done	_	
5-142	1893-1894	,	_	
5-143	1895-1898	but	_	
5-144	1899-1905	enjoys	_	
5-145	1906-1914	focusing	_	
5-146	1915-1919	more	_	
5-147	1920-1922	on	_	
5-148	1923-1930	backend	_	
5-149	1931-1942	development	_	
5-150	1943-1949	Expert	_	
5-151	1950-1952	in	_	
5-152	1953-1956	two	_	
5-153	1957-1959	or	_	
5-154	1960-1964	more	_	
5-155	1965-1975	Integrated	_	
5-156	1976-1987	Development	_	
5-157	1988-2000	Environments	_	
5-158	2001-2004	and	_	
5-159	2005-2014	languages	_	
5-160	2015-2024	including	_	
5-161	2025-2026	C	Hard Skill	
5-162	2026-2027	#	_	
5-163	2027-2028	,	_	
5-164	2029-2030	.	_	
5-165	2030-2033	NET	_	
5-166	2034-2038	core	_	
5-167	2038-2039	,	_	
5-168	2040-2044	Java	Hard Skill	
5-169	2045-2054	scripting	_	
5-170	2054-2055	,	_	
5-171	2056-2067	Objective-C	Hard Skill	
5-172	2067-2068	,	_	
5-173	2069-2075	Visual	_	
5-174	2076-2082	Studio	_	
5-175	2082-2083	,	_	
5-176	2084-2091	Eclipse	_	
5-177	2091-2092	,	_	
5-178	2093-2096	etc	_	
5-179	2097-2107	Experience	_	
5-180	2108-2118	developing	_	
5-181	2119-2126	against	_	
5-182	2127-2133	common	_	
5-183	2134-2137	API	Hard Skill	
5-184	2138-2150	technologies	_	
5-185	2151-2160	including	_	
5-186	2161-2165	REST	_	
5-187	2166-2169	and	_	
5-188	2170-2174	SOAP	_	
5-189	2175-2185	Experience	_	
5-190	2186-2190	with	_	
5-191	2191-2199	React.js	_	
5-192	2200-2209	framework	_	
5-193	2210-2221	development	_	
5-194	2222-2225	and	_	
5-195	2226-2237	development	_	
5-196	2238-2248	Experience	_	
5-197	2249-2253	with	_	
5-198	2254-2257	ASP	_	
5-199	2258-2261	NET	_	
5-200	2262-2268	WebAPI	_	
5-201	2269-2272	and	_	
5-202	2273-2274	.	_	
5-203	2274-2277	NET	_	
5-204	2278-2282	Core	_	
5-205	2283-2289	Strong	_	
5-206	2290-2303	understanding	_	
5-207	2304-2306	of	_	
5-208	2307-2313	design	Hard Skill	
5-209	2314-2322	patterns	_	
5-210	2323-2324	(	_	
5-211	2324-2328	MVVM	Hard Skill	
5-212	2328-2329	,	_	
5-213	2330-2333	etc	_	
5-214	2333-2334	.	_	
5-215	2334-2335	)	_	
5-216	2335-2336	,	_	
5-217	2337-2347	dependency	_	
5-218	2348-2357	injection	_	
5-219	2358-2364	Strong	_	
5-220	2365-2378	understanding	_	
5-221	2379-2381	of	_	
5-222	2382-2397	object-oriented	_	
5-223	2398-2404	design	Hard Skill	
5-224	2405-2408	and	_	
5-225	2409-2420	development	_	
5-226	2421-2427	Strong	_	
5-227	2428-2431	SQL	Hard Skill	
5-228	2432-2442	experience	_	
5-229	2443-2446	and	_	
5-230	2447-2456	knowledge	_	
5-231	2457-2459	of	_	
5-232	2460-2466	entity	_	
5-233	2467-2476	framework	_	
5-234	2477-2483	strong	_	
5-235	2484-2493	knowledge	_	
5-236	2494-2496	of	_	
5-237	2497-2500	the	_	
5-238	2501-2505	REST	_	
5-239	2506-2509	API	Hard Skill	
5-240	2510-2514	life	_	
5-241	2515-2520	cycle	_	
5-242	2521-2527	strong	_	
5-243	2528-2537	knowledge	_	
5-244	2538-2540	of	_	
5-245	2541-2549	React.js	_	
5-246	2550-2553	and	_	
5-247	2554-2564	responsive	_	
5-248	2565-2568	web	_	
5-249	2569-2575	design	Hard Skill	
5-250	2576-2586	Experience	_	
5-251	2587-2591	with	_	
5-252	2592-2600	MuleSoft	_	
5-253	2601-2603	or	_	
5-254	2604-2609	other	_	
5-255	2610-2613	API	Hard Skill	
5-256	2614-2625	integration	_	
5-257	2626-2635	platforms	_	
5-258	2636-2646	Understand	_	
5-259	2647-2650	and	_	
5-260	2651-2658	analyze	_	
5-261	2659-2665	system	_	
5-262	2666-2669	and	_	
5-263	2670-2673	SQL	Hard Skill	
5-264	2674-2684	bottleneck	_	
5-265	2684-2685	,	_	
5-266	2686-2690	good	_	
5-267	2691-2706	troubleshooting	Hard Skill	
5-268	2707-2713	skills	_	
5-269	2714-2724	Experience	_	
5-270	2725-2729	with	_	
5-271	2730-2743	containerized	_	
5-272	2744-2755	application	_	
5-273	2756-2767	development	_	
5-274	2768-2771	and	_	
5-275	2772-2781	knowledge	_	
5-276	2782-2784	of	_	
5-277	2785-2791	Docker	Hard Skill	
5-278	2791-2792	,	_	
5-279	2793-2803	Kubernetes	Hard Skill	
5-280	2804-2806	or	_	
5-281	2807-2816	OpenShift	_	
5-282	2817-2827	Experience	_	
5-283	2828-2832	with	_	
5-284	2833-2843	production	_	
5-285	2844-2851	support	_	
5-286	2852-2855	and	_	
5-287	2856-2860	work	_	
5-288	2861-2863	in	_	
5-289	2864-2868	team	_	
5-290	2869-2880	environment	_	
5-291	2881-2885	with	_	
5-292	2886-2894	multiple	_	
5-293	2895-2905	interfaces	_	
5-294	2906-2916	Experience	_	
5-295	2917-2921	with	_	
5-296	2922-2924	CI	_	
5-297	2925-2926	/	_	
5-298	2927-2929	CD	_	
5-299	2929-2930	,	_	
5-300	2931-2934	AWS	Hard Skill	
5-301	2935-2946	deployments	_	
5-302	2947-2957	Experience	_	
5-303	2958-2962	with	_	
5-304	2963-2970	Harness	_	
5-305	2970-2971	,	_	
5-306	2972-2978	Bamboo	_	
5-307	2979-2982	and	_	
5-308	2983-2986	UCD	_	
5-309	2987-2997	Experience	_	
5-310	2998-3005	working	_	
5-311	3006-3010	with	_	
5-312	3011-3016	Agile	Hard Skill	
5-313	3017-3030	methodologies	_	
5-314	3031-3041	Experience	_	
5-315	3042-3044	in	_	
5-316	3045-3049	Test	_	
5-317	3050-3056	Driven	_	
5-318	3057-3068	Development	_	
5-319	3069-3070	(	_	
5-320	3070-3073	TDD	_	
5-321	3073-3074	)	_	
5-322	3075-3079	Vast	_	
5-323	3080-3089	knowledge	_	
5-324	3090-3092	of	_	
5-325	3093-3100	current	_	
5-326	3101-3107	trends	_	
5-327	3108-3110	in	_	
5-328	3111-3114	the	_	
5-329	3115-3121	common	_	
5-330	3122-3130	platform	_	
5-331	3131-3142	omnichannel	_	
5-332	3143-3155	architecture	_	
5-333	3156-3159	and	_	
5-334	3160-3170	technology	_	
5-335	3171-3174	The	_	
5-336	3175-3183	Software	_	
5-337	3184-3193	Developer	_	
5-338	3194-3196	is	_	
5-339	3197-3208	responsible	_	
5-340	3209-3212	for	_	
5-341	3213-3224	development	_	
5-342	3224-3225	,	_	
5-343	3226-3237	maintenance	_	
5-344	3237-3238	,	_	
5-345	3239-3242	and	_	
5-346	3243-3251	on-going	_	
5-347	3252-3259	support	_	
5-348	3260-3262	of	_	
5-349	3263-3269	custom	_	
5-350	3270-3280	enterprise	_	
5-351	3281-3293	applications	_	
