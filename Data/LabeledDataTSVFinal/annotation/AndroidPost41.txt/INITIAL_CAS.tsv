#FORMAT=WebAnno TSV 3.3


#Text=About Matrix Precise:Matrix Precise Inc. is a Technology Development, Consulting and R&D Company.
1-1	0-5	About	
1-2	6-12	Matrix	
1-3	13-20	Precise	
1-4	20-21	:	
1-5	21-27	Matrix	
1-6	28-35	Precise	
1-7	36-39	Inc	
1-8	39-40	.	
1-9	41-43	is	
1-10	44-45	a	
1-11	46-56	Technology	
1-12	57-68	Development	
1-13	68-69	,	
1-14	70-80	Consulting	
1-15	81-84	and	
1-16	85-86	R	
1-17	86-87	&	
1-18	87-88	D	
1-19	89-96	Company	
1-20	96-97	.	

#Text=We provide solutions in the areas of facial recognition, smart retail, handwriting recognition and smart robots.
2-1	98-100	We	
2-2	101-108	provide	
2-3	109-118	solutions	
2-4	119-121	in	
2-5	122-125	the	
2-6	126-131	areas	
2-7	132-134	of	
2-8	135-141	facial	
2-9	142-153	recognition	
2-10	153-154	,	
2-11	155-160	smart	
2-12	161-167	retail	
2-13	167-168	,	
2-14	169-180	handwriting	
2-15	181-192	recognition	
2-16	193-196	and	
2-17	197-202	smart	
2-18	203-209	robots	
2-19	209-210	.	

#Text=Our client services also entail a range of development and support solutions from web and mobile application development, infrastructure and production support and testing services.
3-1	211-214	Our	
3-2	215-221	client	
3-3	222-230	services	
3-4	231-235	also	
3-5	236-242	entail	
3-6	243-244	a	
3-7	245-250	range	
3-8	251-253	of	
3-9	254-265	development	
3-10	266-269	and	
3-11	270-277	support	
3-12	278-287	solutions	
3-13	288-292	from	
3-14	293-296	web	
3-15	297-300	and	
3-16	301-307	mobile	
3-17	308-319	application	
3-18	320-331	development	
3-19	331-332	,	
3-20	333-347	infrastructure	
3-21	348-351	and	
3-22	352-362	production	
3-23	363-370	support	
3-24	371-374	and	
3-25	375-382	testing	
3-26	383-391	services	
3-27	391-392	.	

#Text=We... offer very competitive compensation and benefits packages including health insurance and 401K.Position Description:We are looking for an Android Developer who possesses a passion for pushing mobile technologies to the limits.
4-1	393-395	We	
4-2	395-396	.	
4-3	396-397	.	
4-4	397-398	.	
4-5	399-404	offer	
4-6	405-409	very	
4-7	410-421	competitive	
4-8	422-434	compensation	
4-9	435-438	and	
4-10	439-447	benefits	
4-11	448-456	packages	
4-12	457-466	including	
4-13	467-473	health	
4-14	474-483	insurance	
4-15	484-487	and	
4-16	488-501	401K.Position	
4-17	502-513	Description	
4-18	513-514	:	
4-19	514-516	We	
4-20	517-520	are	
4-21	521-528	looking	
4-22	529-532	for	
4-23	533-535	an	
4-24	536-543	Android	
4-25	544-553	Developer	
4-26	554-557	who	
4-27	558-567	possesses	
4-28	568-569	a	
4-29	570-577	passion	
4-30	578-581	for	
4-31	582-589	pushing	
4-32	590-596	mobile	
4-33	597-609	technologies	
4-34	610-612	to	
4-35	613-616	the	
4-36	617-623	limits	
4-37	623-624	.	

#Text=This Android app developer will work with our team of talented engineers to design and build the next generation of our mobile applications.Responsibilities: Design and build advanced applications for the Android platform Collaborate with cross-functional teams to define, design, and ship new features Work with outside data sources and APIs Translate designs and wireframes into high quality code.
5-1	625-629	This	
5-2	630-637	Android	
5-3	638-641	app	
5-4	642-651	developer	
5-5	652-656	will	
5-6	657-661	work	
5-7	662-666	with	
5-8	667-670	our	
5-9	671-675	team	
5-10	676-678	of	
5-11	679-687	talented	
5-12	688-697	engineers	
5-13	698-700	to	
5-14	701-707	design	
5-15	708-711	and	
5-16	712-717	build	
5-17	718-721	the	
5-18	722-726	next	
5-19	727-737	generation	
5-20	738-740	of	
5-21	741-744	our	
5-22	745-751	mobile	
5-23	752-781	applications.Responsibilities	
5-24	781-782	:	
5-25	783-789	Design	
5-26	790-793	and	
5-27	794-799	build	
5-28	800-808	advanced	
5-29	809-821	applications	
5-30	822-825	for	
5-31	826-829	the	
5-32	830-837	Android	
5-33	838-846	platform	
5-34	847-858	Collaborate	
5-35	859-863	with	
5-36	864-880	cross-functional	
5-37	881-886	teams	
5-38	887-889	to	
5-39	890-896	define	
5-40	896-897	,	
5-41	898-904	design	
5-42	904-905	,	
5-43	906-909	and	
5-44	910-914	ship	
5-45	915-918	new	
5-46	919-927	features	
5-47	928-932	Work	
5-48	933-937	with	
5-49	938-945	outside	
5-50	946-950	data	
5-51	951-958	sources	
5-52	959-962	and	
5-53	963-967	APIs	
5-54	968-977	Translate	
5-55	978-985	designs	
5-56	986-989	and	
5-57	990-1000	wireframes	
5-58	1001-1005	into	
5-59	1006-1010	high	
5-60	1011-1018	quality	
5-61	1019-1023	code	
5-62	1023-1024	.	

#Text=Ensure the best possible quality, performance and responsiveness of the application.
6-1	1025-1031	Ensure	
6-2	1032-1035	the	
6-3	1036-1040	best	
6-4	1041-1049	possible	
6-5	1050-1057	quality	
6-6	1057-1058	,	
6-7	1059-1070	performance	
6-8	1071-1074	and	
6-9	1075-1089	responsiveness	
6-10	1090-1092	of	
6-11	1093-1096	the	
6-12	1097-1108	application	
6-13	1108-1109	.	

#Text=Identify and correct bottlenecks and Work on bug fixing and improving application performance.
7-1	1110-1118	Identify	
7-2	1119-1122	and	
7-3	1123-1130	correct	
7-4	1131-1142	bottlenecks	
7-5	1143-1146	and	
7-6	1147-1151	Work	
7-7	1152-1154	on	
7-8	1155-1158	bug	
7-9	1159-1165	fixing	
7-10	1166-1169	and	
7-11	1170-1179	improving	
7-12	1180-1191	application	
7-13	1192-1203	performance	
7-14	1203-1204	.	

#Text=Help design, build and maintain high performance reusable and reliable Java and Android.
8-1	1205-1209	Help	
8-2	1210-1216	design	
8-3	1216-1217	,	
8-4	1218-1223	build	
8-5	1224-1227	and	
8-6	1228-1236	maintain	
8-7	1237-1241	high	
8-8	1242-1253	performance	
8-9	1254-1262	reusable	
8-10	1263-1266	and	
8-11	1267-1275	reliable	
8-12	1276-1280	Java	
8-13	1281-1284	and	
8-14	1285-1292	Android	
8-15	1292-1293	.	

#Text=Unit-test code for robustness, including edge cases, usability, and general reliability Continuously discover, evaluate, and implement new technologies to maximize development efficiency Perform regular code review of peers via Crucible.
9-1	1294-1303	Unit-test	
9-2	1304-1308	code	
9-3	1309-1312	for	
9-4	1313-1323	robustness	
9-5	1323-1324	,	
9-6	1325-1334	including	
9-7	1335-1339	edge	
9-8	1340-1345	cases	
9-9	1345-1346	,	
9-10	1347-1356	usability	
9-11	1356-1357	,	
9-12	1358-1361	and	
9-13	1362-1369	general	
9-14	1370-1381	reliability	
9-15	1382-1394	Continuously	
9-16	1395-1403	discover	
9-17	1403-1404	,	
9-18	1405-1413	evaluate	
9-19	1413-1414	,	
9-20	1415-1418	and	
9-21	1419-1428	implement	
9-22	1429-1432	new	
9-23	1433-1445	technologies	
9-24	1446-1448	to	
9-25	1449-1457	maximize	
9-26	1458-1469	development	
9-27	1470-1480	efficiency	
9-28	1481-1488	Perform	
9-29	1489-1496	regular	
9-30	1497-1501	code	
9-31	1502-1508	review	
9-32	1509-1511	of	
9-33	1512-1517	peers	
9-34	1518-1521	via	
9-35	1522-1530	Crucible	
9-36	1530-1531	.	

#Text=Lead the offshore development team and actively contribute to sprint grooming with Business Analysts & Product Owner.Requirements: Proven software development experience and Android native development using Java.
10-1	1532-1536	Lead	
10-2	1537-1540	the	
10-3	1541-1549	offshore	
10-4	1550-1561	development	
10-5	1562-1566	team	
10-6	1567-1570	and	
10-7	1571-1579	actively	
10-8	1580-1590	contribute	
10-9	1591-1593	to	
10-10	1594-1600	sprint	
10-11	1601-1609	grooming	
10-12	1610-1614	with	
10-13	1615-1623	Business	
10-14	1624-1632	Analysts	
10-15	1633-1634	&	
10-16	1635-1642	Product	
10-17	1643-1661	Owner.Requirements	
10-18	1661-1662	:	
10-19	1663-1669	Proven	
10-20	1670-1678	software	
10-21	1679-1690	development	
10-22	1691-1701	experience	
10-23	1702-1705	and	
10-24	1706-1713	Android	
10-25	1714-1720	native	
10-26	1721-1732	development	
10-27	1733-1738	using	
10-28	1739-1743	Java	
10-29	1743-1744	.	

#Text=Experience in creating Libraries and custom SDK.
11-1	1745-1755	Experience	
11-2	1756-1758	in	
11-3	1759-1767	creating	
11-4	1768-1777	Libraries	
11-5	1778-1781	and	
11-6	1782-1788	custom	
11-7	1789-1792	SDK	
11-8	1792-1793	.	

#Text=Experience with networking libraries like retrofit, volley.
12-1	1794-1804	Experience	
12-2	1805-1809	with	
12-3	1810-1820	networking	
12-4	1821-1830	libraries	
12-5	1831-1835	like	
12-6	1836-1844	retrofit	
12-7	1844-1845	,	
12-8	1846-1852	volley	
12-9	1852-1853	.	

#Text=Experience with MVVM,MVP, JetPack architectural design pattern.
13-1	1854-1864	Experience	
13-2	1865-1869	with	
13-3	1870-1874	MVVM	
13-4	1874-1875	,	
13-5	1875-1878	MVP	
13-6	1878-1879	,	
13-7	1880-1887	JetPack	
13-8	1888-1901	architectural	
13-9	1902-1908	design	
13-10	1909-1916	pattern	
13-11	1916-1917	.	

#Text=Experience with LiveData, Observers and DataBinding.
14-1	1918-1928	Experience	
14-2	1929-1933	with	
14-3	1934-1942	LiveData	
14-4	1942-1943	,	
14-5	1944-1953	Observers	
14-6	1954-1957	and	
14-7	1958-1969	DataBinding	
14-8	1969-1970	.	

#Text=Experience with Firebase Cloud Messaging, Firebase Ananlytics, App Dynamics.
15-1	1971-1981	Experience	
15-2	1982-1986	with	
15-3	1987-1995	Firebase	
15-4	1996-2001	Cloud	
15-5	2002-2011	Messaging	
15-6	2011-2012	,	
15-7	2013-2021	Firebase	
15-8	2022-2032	Ananlytics	
15-9	2032-2033	,	
15-10	2034-2037	App	
15-11	2038-2046	Dynamics	
15-12	2046-2047	.	

#Text=Experience with Latest Android SDK.
16-1	2048-2058	Experience	
16-2	2059-2063	with	
16-3	2064-2070	Latest	
16-4	2071-2078	Android	
16-5	2079-2082	SDK	
16-6	2082-2083	.	

#Text=Good Understanding of Application Security concepts and experience with Proguard.
17-1	2084-2088	Good	
17-2	2089-2102	Understanding	
17-3	2103-2105	of	
17-4	2106-2117	Application	
17-5	2118-2126	Security	
17-6	2127-2135	concepts	
17-7	2136-2139	and	
17-8	2140-2150	experience	
17-9	2151-2155	with	
17-10	2156-2164	Proguard	
17-11	2164-2165	.	

#Text=Familiarity with Agile Management tools like Rallly/Jira.
18-1	2166-2177	Familiarity	
18-2	2178-2182	with	
18-3	2183-2188	Agile	
18-4	2189-2199	Management	
18-5	2200-2205	tools	
18-6	2206-2210	like	
18-7	2211-2217	Rallly	
18-8	2217-2218	/	
18-9	2218-2222	Jira	
18-10	2222-2223	.	

#Text=Strong knowledge of Android UI design principles, patterns, and best practices.
19-1	2224-2230	Strong	
19-2	2231-2240	knowledge	
19-3	2241-2243	of	
19-4	2244-2251	Android	
19-5	2252-2254	UI	
19-6	2255-2261	design	
19-7	2262-2272	principles	
19-8	2272-2273	,	
19-9	2274-2282	patterns	
19-10	2282-2283	,	
19-11	2284-2287	and	
19-12	2288-2292	best	
19-13	2293-2302	practices	
19-14	2302-2303	.	

#Text=Strong UI development skills (complex view trees, animations, rendering and strong knowledge of the Android UI kit).
20-1	2304-2310	Strong	
20-2	2311-2313	UI	
20-3	2314-2325	development	
20-4	2326-2332	skills	
20-5	2333-2334	(	
20-6	2334-2341	complex	
20-7	2342-2346	view	
20-8	2347-2352	trees	
20-9	2352-2353	,	
20-10	2354-2364	animations	
20-11	2364-2365	,	
20-12	2366-2375	rendering	
20-13	2376-2379	and	
20-14	2380-2386	strong	
20-15	2387-2396	knowledge	
20-16	2397-2399	of	
20-17	2400-2403	the	
20-18	2404-2411	Android	
20-19	2412-2414	UI	
20-20	2415-2418	kit	
20-21	2418-2419	)	
20-22	2419-2420	.	

#Text=Experience with offline storage, threading and performance tuning.
21-1	2421-2431	Experience	
21-2	2432-2436	with	
21-3	2437-2444	offline	
21-4	2445-2452	storage	
21-5	2452-2453	,	
21-6	2454-2463	threading	
21-7	2464-2467	and	
21-8	2468-2479	performance	
21-9	2480-2486	tuning	
21-10	2486-2487	.	

#Text=Familiarity with cloud message APIs (GCM/FCM) and push notifications.
22-1	2488-2499	Familiarity	
22-2	2500-2504	with	
22-3	2505-2510	cloud	
22-4	2511-2518	message	
22-5	2519-2523	APIs	
22-6	2524-2525	(	
22-7	2525-2528	GCM	
22-8	2528-2529	/	
22-9	2529-2532	FCM	
22-10	2532-2533	)	
22-11	2534-2537	and	
22-12	2538-2542	push	
22-13	2543-2556	notifications	
22-14	2556-2557	.	

#Text=Understands Google's Android design principles and interface guidelines.
23-1	2558-2569	Understands	
23-2	2570-2578	Google's	
23-3	2579-2586	Android	
23-4	2587-2593	design	
23-5	2594-2604	principles	
23-6	2605-2608	and	
23-7	2609-2618	interface	
23-8	2619-2629	guidelines	
23-9	2629-2630	.	

#Text=Working knowledge of the general mobile landscape, architectures, trends, and emerging technologies Familiarity with MVC, MVP and MVVM architecture.
24-1	2631-2638	Working	
24-2	2639-2648	knowledge	
24-3	2649-2651	of	
24-4	2652-2655	the	
24-5	2656-2663	general	
24-6	2664-2670	mobile	
24-7	2671-2680	landscape	
24-8	2680-2681	,	
24-9	2682-2695	architectures	
24-10	2695-2696	,	
24-11	2697-2703	trends	
24-12	2703-2704	,	
24-13	2705-2708	and	
24-14	2709-2717	emerging	
24-15	2718-2730	technologies	
24-16	2731-2742	Familiarity	
24-17	2743-2747	with	
24-18	2748-2751	MVC	
24-19	2751-2752	,	
24-20	2753-2756	MVP	
24-21	2757-2760	and	
24-22	2761-2765	MVVM	
24-23	2766-2778	architecture	
24-24	2778-2779	.	

#Text=Proficient understanding of code versioning tools, such as Git.
25-1	2780-2790	Proficient	
25-2	2791-2804	understanding	
25-3	2805-2807	of	
25-4	2808-2812	code	
25-5	2813-2823	versioning	
25-6	2824-2829	tools	
25-7	2829-2830	,	
25-8	2831-2835	such	
25-9	2836-2838	as	
25-10	2839-2842	Git	
25-11	2842-2843	.	

#Text=Familiarity with continuous integration i.e.
26-1	2844-2855	Familiarity	
26-2	2856-2860	with	
26-3	2861-2871	continuous	
26-4	2872-2883	integration	
26-5	2884-2887	i.e	
26-6	2887-2888	.	

#Text=Jenkins Good knowledge of unit testing framework (Robo Electric and Instrumentation) and rash lytic tools.Nice to have: Kotlin experience.
27-1	2889-2896	Jenkins	
27-2	2897-2901	Good	
27-3	2902-2911	knowledge	
27-4	2912-2914	of	
27-5	2915-2919	unit	
27-6	2920-2927	testing	
27-7	2928-2937	framework	
27-8	2938-2939	(	
27-9	2939-2943	Robo	
27-10	2944-2952	Electric	
27-11	2953-2956	and	
27-12	2957-2972	Instrumentation	
27-13	2972-2973	)	
27-14	2974-2977	and	
27-15	2978-2982	rash	
27-16	2983-2988	lytic	
27-17	2989-2999	tools.Nice	
27-18	3000-3002	to	
27-19	3003-3007	have	
27-20	3007-3008	:	
27-21	3009-3015	Kotlin	
27-22	3016-3026	experience	
27-23	3026-3027	.	

#Text=Published at least one original Android app.
28-1	3028-3037	Published	
28-2	3038-3040	at	
28-3	3041-3046	least	
28-4	3047-3050	one	
28-5	3051-3059	original	
28-6	3060-3067	Android	
28-7	3068-3071	app	
28-8	3071-3072	.	

#Text=BS/MS degree in Computer Science, Engineering or a related subject Proven software development experience and Android native development using Java Experience in creating Libraries and custom SDK Experience with networking libraries like retrofit, volley Experience with MVVM,MVP, JetPack architectural design pattern Experience with LiveData, Observers and DataBinding Experience with Firebase Cloud Messaging, Firebase Ananlytics, App Dynamics Experience with Latest Android SDK Good Understanding of Application Security concepts and experience with Proguard Familiarity with Agile Management tools like Rallly/Jira Strong knowledge of Android UI design principles, patterns, and best practices Strong UI development skills (complex view trees, animations, rendering and strong knowledge of the Android UI kit) Experience with offline storage, threading and performance tuning Familiarity with cloud message APIs (GCM/FCM) and push notifications Understands Google's Android design principles and interface guidelines Working knowledge of the general mobile landscape, architectures, trends, and emerging technologies Familiarity with MVC, MVP and MVVM architecture Proficient understanding of code versioning tools, such as Git Familiarity with continuous integration i.e Good knowledge of unit testing framework (Robo Electric and Instrumentation) and rash lytic tools Kotlin experience Published at least one original Android app BS/MS degree in Computer Science, Engineering or a related subject Design and build advanced applications for the Android platform Collaborate with cross-functional teams to define, design, and ship new features Work with outside data sources and APIs Translate designs and wireframes into high quality code Ensure the best possible quality, performance and responsiveness of the application Identify and correct bottlenecks and Work on bug fixing and improving application performance Help design, build and maintain high performance reusable and reliable Java and Android Unit-test code for robustness, including edge cases, usability, and general reliability Continuously discover, evaluate, and implement new technologies to maximize development efficiency Perform regular code review of peers via Crucible Lead the offshore development team and actively contribute to sprint grooming with Business Analysts & Product Owner We offer very competitive compensation and benefits packages including health insurance and 401K
29-1	3073-3075	BS	
29-2	3075-3076	/	
29-3	3076-3078	MS	
29-4	3079-3085	degree	
29-5	3086-3088	in	
29-6	3089-3097	Computer	
29-7	3098-3105	Science	
29-8	3105-3106	,	
29-9	3107-3118	Engineering	
29-10	3119-3121	or	
29-11	3122-3123	a	
29-12	3124-3131	related	
29-13	3132-3139	subject	
29-14	3140-3146	Proven	
29-15	3147-3155	software	
29-16	3156-3167	development	
29-17	3168-3178	experience	
29-18	3179-3182	and	
29-19	3183-3190	Android	
29-20	3191-3197	native	
29-21	3198-3209	development	
29-22	3210-3215	using	
29-23	3216-3220	Java	
29-24	3221-3231	Experience	
29-25	3232-3234	in	
29-26	3235-3243	creating	
29-27	3244-3253	Libraries	
29-28	3254-3257	and	
29-29	3258-3264	custom	
29-30	3265-3268	SDK	
29-31	3269-3279	Experience	
29-32	3280-3284	with	
29-33	3285-3295	networking	
29-34	3296-3305	libraries	
29-35	3306-3310	like	
29-36	3311-3319	retrofit	
29-37	3319-3320	,	
29-38	3321-3327	volley	
29-39	3328-3338	Experience	
29-40	3339-3343	with	
29-41	3344-3348	MVVM	
29-42	3348-3349	,	
29-43	3349-3352	MVP	
29-44	3352-3353	,	
29-45	3354-3361	JetPack	
29-46	3362-3375	architectural	
29-47	3376-3382	design	
29-48	3383-3390	pattern	
29-49	3391-3401	Experience	
29-50	3402-3406	with	
29-51	3407-3415	LiveData	
29-52	3415-3416	,	
29-53	3417-3426	Observers	
29-54	3427-3430	and	
29-55	3431-3442	DataBinding	
29-56	3443-3453	Experience	
29-57	3454-3458	with	
29-58	3459-3467	Firebase	
29-59	3468-3473	Cloud	
29-60	3474-3483	Messaging	
29-61	3483-3484	,	
29-62	3485-3493	Firebase	
29-63	3494-3504	Ananlytics	
29-64	3504-3505	,	
29-65	3506-3509	App	
29-66	3510-3518	Dynamics	
29-67	3519-3529	Experience	
29-68	3530-3534	with	
29-69	3535-3541	Latest	
29-70	3542-3549	Android	
29-71	3550-3553	SDK	
29-72	3554-3558	Good	
29-73	3559-3572	Understanding	
29-74	3573-3575	of	
29-75	3576-3587	Application	
29-76	3588-3596	Security	
29-77	3597-3605	concepts	
29-78	3606-3609	and	
29-79	3610-3620	experience	
29-80	3621-3625	with	
29-81	3626-3634	Proguard	
29-82	3635-3646	Familiarity	
29-83	3647-3651	with	
29-84	3652-3657	Agile	
29-85	3658-3668	Management	
29-86	3669-3674	tools	
29-87	3675-3679	like	
29-88	3680-3686	Rallly	
29-89	3686-3687	/	
29-90	3687-3691	Jira	
29-91	3692-3698	Strong	
29-92	3699-3708	knowledge	
29-93	3709-3711	of	
29-94	3712-3719	Android	
29-95	3720-3722	UI	
29-96	3723-3729	design	
29-97	3730-3740	principles	
29-98	3740-3741	,	
29-99	3742-3750	patterns	
29-100	3750-3751	,	
29-101	3752-3755	and	
29-102	3756-3760	best	
29-103	3761-3770	practices	
29-104	3771-3777	Strong	
29-105	3778-3780	UI	
29-106	3781-3792	development	
29-107	3793-3799	skills	
29-108	3800-3801	(	
29-109	3801-3808	complex	
29-110	3809-3813	view	
29-111	3814-3819	trees	
29-112	3819-3820	,	
29-113	3821-3831	animations	
29-114	3831-3832	,	
29-115	3833-3842	rendering	
29-116	3843-3846	and	
29-117	3847-3853	strong	
29-118	3854-3863	knowledge	
29-119	3864-3866	of	
29-120	3867-3870	the	
29-121	3871-3878	Android	
29-122	3879-3881	UI	
29-123	3882-3885	kit	
29-124	3885-3886	)	
29-125	3887-3897	Experience	
29-126	3898-3902	with	
29-127	3903-3910	offline	
29-128	3911-3918	storage	
29-129	3918-3919	,	
29-130	3920-3929	threading	
29-131	3930-3933	and	
29-132	3934-3945	performance	
29-133	3946-3952	tuning	
29-134	3953-3964	Familiarity	
29-135	3965-3969	with	
29-136	3970-3975	cloud	
29-137	3976-3983	message	
29-138	3984-3988	APIs	
29-139	3989-3990	(	
29-140	3990-3993	GCM	
29-141	3993-3994	/	
29-142	3994-3997	FCM	
29-143	3997-3998	)	
29-144	3999-4002	and	
29-145	4003-4007	push	
29-146	4008-4021	notifications	
29-147	4022-4033	Understands	
29-148	4034-4042	Google's	
29-149	4043-4050	Android	
29-150	4051-4057	design	
29-151	4058-4068	principles	
29-152	4069-4072	and	
29-153	4073-4082	interface	
29-154	4083-4093	guidelines	
29-155	4094-4101	Working	
29-156	4102-4111	knowledge	
29-157	4112-4114	of	
29-158	4115-4118	the	
29-159	4119-4126	general	
29-160	4127-4133	mobile	
29-161	4134-4143	landscape	
29-162	4143-4144	,	
29-163	4145-4158	architectures	
29-164	4158-4159	,	
29-165	4160-4166	trends	
29-166	4166-4167	,	
29-167	4168-4171	and	
29-168	4172-4180	emerging	
29-169	4181-4193	technologies	
29-170	4194-4205	Familiarity	
29-171	4206-4210	with	
29-172	4211-4214	MVC	
29-173	4214-4215	,	
29-174	4216-4219	MVP	
29-175	4220-4223	and	
29-176	4224-4228	MVVM	
29-177	4229-4241	architecture	
29-178	4242-4252	Proficient	
29-179	4253-4266	understanding	
29-180	4267-4269	of	
29-181	4270-4274	code	
29-182	4275-4285	versioning	
29-183	4286-4291	tools	
29-184	4291-4292	,	
29-185	4293-4297	such	
29-186	4298-4300	as	
29-187	4301-4304	Git	
29-188	4305-4316	Familiarity	
29-189	4317-4321	with	
29-190	4322-4332	continuous	
29-191	4333-4344	integration	
29-192	4345-4348	i.e	
29-193	4349-4353	Good	
29-194	4354-4363	knowledge	
29-195	4364-4366	of	
29-196	4367-4371	unit	
29-197	4372-4379	testing	
29-198	4380-4389	framework	
29-199	4390-4391	(	
29-200	4391-4395	Robo	
29-201	4396-4404	Electric	
29-202	4405-4408	and	
29-203	4409-4424	Instrumentation	
29-204	4424-4425	)	
29-205	4426-4429	and	
29-206	4430-4434	rash	
29-207	4435-4440	lytic	
29-208	4441-4446	tools	
29-209	4447-4453	Kotlin	
29-210	4454-4464	experience	
29-211	4465-4474	Published	
29-212	4475-4477	at	
29-213	4478-4483	least	
29-214	4484-4487	one	
29-215	4488-4496	original	
29-216	4497-4504	Android	
29-217	4505-4508	app	
29-218	4509-4511	BS	
29-219	4511-4512	/	
29-220	4512-4514	MS	
29-221	4515-4521	degree	
29-222	4522-4524	in	
29-223	4525-4533	Computer	
29-224	4534-4541	Science	
29-225	4541-4542	,	
29-226	4543-4554	Engineering	
29-227	4555-4557	or	
29-228	4558-4559	a	
29-229	4560-4567	related	
29-230	4568-4575	subject	
29-231	4576-4582	Design	
29-232	4583-4586	and	
29-233	4587-4592	build	
29-234	4593-4601	advanced	
29-235	4602-4614	applications	
29-236	4615-4618	for	
29-237	4619-4622	the	
29-238	4623-4630	Android	
29-239	4631-4639	platform	
29-240	4640-4651	Collaborate	
29-241	4652-4656	with	
29-242	4657-4673	cross-functional	
29-243	4674-4679	teams	
29-244	4680-4682	to	
29-245	4683-4689	define	
29-246	4689-4690	,	
29-247	4691-4697	design	
29-248	4697-4698	,	
29-249	4699-4702	and	
29-250	4703-4707	ship	
29-251	4708-4711	new	
29-252	4712-4720	features	
29-253	4721-4725	Work	
29-254	4726-4730	with	
29-255	4731-4738	outside	
29-256	4739-4743	data	
29-257	4744-4751	sources	
29-258	4752-4755	and	
29-259	4756-4760	APIs	
29-260	4761-4770	Translate	
29-261	4771-4778	designs	
29-262	4779-4782	and	
29-263	4783-4793	wireframes	
29-264	4794-4798	into	
29-265	4799-4803	high	
29-266	4804-4811	quality	
29-267	4812-4816	code	
29-268	4817-4823	Ensure	
29-269	4824-4827	the	
29-270	4828-4832	best	
29-271	4833-4841	possible	
29-272	4842-4849	quality	
29-273	4849-4850	,	
29-274	4851-4862	performance	
29-275	4863-4866	and	
29-276	4867-4881	responsiveness	
29-277	4882-4884	of	
29-278	4885-4888	the	
29-279	4889-4900	application	
29-280	4901-4909	Identify	
29-281	4910-4913	and	
29-282	4914-4921	correct	
29-283	4922-4933	bottlenecks	
29-284	4934-4937	and	
29-285	4938-4942	Work	
29-286	4943-4945	on	
29-287	4946-4949	bug	
29-288	4950-4956	fixing	
29-289	4957-4960	and	
29-290	4961-4970	improving	
29-291	4971-4982	application	
29-292	4983-4994	performance	
29-293	4995-4999	Help	
29-294	5000-5006	design	
29-295	5006-5007	,	
29-296	5008-5013	build	
29-297	5014-5017	and	
29-298	5018-5026	maintain	
29-299	5027-5031	high	
29-300	5032-5043	performance	
29-301	5044-5052	reusable	
29-302	5053-5056	and	
29-303	5057-5065	reliable	
29-304	5066-5070	Java	
29-305	5071-5074	and	
29-306	5075-5082	Android	
29-307	5083-5092	Unit-test	
29-308	5093-5097	code	
29-309	5098-5101	for	
29-310	5102-5112	robustness	
29-311	5112-5113	,	
29-312	5114-5123	including	
29-313	5124-5128	edge	
29-314	5129-5134	cases	
29-315	5134-5135	,	
29-316	5136-5145	usability	
29-317	5145-5146	,	
29-318	5147-5150	and	
29-319	5151-5158	general	
29-320	5159-5170	reliability	
29-321	5171-5183	Continuously	
29-322	5184-5192	discover	
29-323	5192-5193	,	
29-324	5194-5202	evaluate	
29-325	5202-5203	,	
29-326	5204-5207	and	
29-327	5208-5217	implement	
29-328	5218-5221	new	
29-329	5222-5234	technologies	
29-330	5235-5237	to	
29-331	5238-5246	maximize	
29-332	5247-5258	development	
29-333	5259-5269	efficiency	
29-334	5270-5277	Perform	
29-335	5278-5285	regular	
29-336	5286-5290	code	
29-337	5291-5297	review	
29-338	5298-5300	of	
29-339	5301-5306	peers	
29-340	5307-5310	via	
29-341	5311-5319	Crucible	
29-342	5320-5324	Lead	
29-343	5325-5328	the	
29-344	5329-5337	offshore	
29-345	5338-5349	development	
29-346	5350-5354	team	
29-347	5355-5358	and	
29-348	5359-5367	actively	
29-349	5368-5378	contribute	
29-350	5379-5381	to	
29-351	5382-5388	sprint	
29-352	5389-5397	grooming	
29-353	5398-5402	with	
29-354	5403-5411	Business	
29-355	5412-5420	Analysts	
29-356	5421-5422	&	
29-357	5423-5430	Product	
29-358	5431-5436	Owner	
29-359	5437-5439	We	
29-360	5440-5445	offer	
29-361	5446-5450	very	
29-362	5451-5462	competitive	
29-363	5463-5475	compensation	
29-364	5476-5479	and	
29-365	5480-5488	benefits	
29-366	5489-5497	packages	
29-367	5498-5507	including	
29-368	5508-5514	health	
29-369	5515-5524	insurance	
29-370	5525-5528	and	
29-371	5529-5533	401K	
