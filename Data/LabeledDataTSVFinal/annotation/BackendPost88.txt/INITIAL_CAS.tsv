#FORMAT=WebAnno TSV 3.3


#Text=Job Description: Delivering a complete front end application.
1-1	0-3	Job	
1-2	4-15	Description	
1-3	15-16	:	
1-4	17-27	Delivering	
1-5	28-29	a	
1-6	30-38	complete	
1-7	39-44	front	
1-8	45-48	end	
1-9	49-60	application	
1-10	60-61	.	

#Text=Ensuring high performance on mobile and desktop...
2-1	62-70	Ensuring	
2-2	71-75	high	
2-3	76-87	performance	
2-4	88-90	on	
2-5	91-97	mobile	
2-6	98-101	and	
2-7	102-109	desktop	
2-8	109-110	.	
2-9	110-111	.	
2-10	111-112	.	

#Text=Writing tested, idiomatic, and documented JavaScript, HTML and CSS.
3-1	113-120	Writing	
3-2	121-127	tested	
3-3	127-128	,	
3-4	129-138	idiomatic	
3-5	138-139	,	
3-6	140-143	and	
3-7	144-154	documented	
3-8	155-165	JavaScript	
3-9	165-166	,	
3-10	167-171	HTML	
3-11	172-175	and	
3-12	176-179	CSS	
3-13	179-180	.	

#Text=Coordinating the workflow between the graphic designer, the HTML coder, and candidates self.
4-1	181-193	Coordinating	
4-2	194-197	the	
4-3	198-206	workflow	
4-4	207-214	between	
4-5	215-218	the	
4-6	219-226	graphic	
4-7	227-235	designer	
4-8	235-236	,	
4-9	237-240	the	
4-10	241-245	HTML	
4-11	246-251	coder	
4-12	251-252	,	
4-13	253-256	and	
4-14	257-267	candidates	
4-15	268-272	self	
4-16	272-273	.	

#Text=Cooperating with the back-end developer in the process of building the RESTful API.
5-1	274-285	Cooperating	
5-2	286-290	with	
5-3	291-294	the	
5-4	295-303	back-end	
5-5	304-313	developer	
5-6	314-316	in	
5-7	317-320	the	
5-8	321-328	process	
5-9	329-331	of	
5-10	332-340	building	
5-11	341-344	the	
5-12	345-352	RESTful	
5-13	353-356	API	
5-14	356-357	.	

#Text=Proficiency with Node Package Manager (npm), Angular CLI, Angular, TypeScript, JavaScript, HTML5,CSS, RxJS, Git and Empathy.
6-1	358-369	Proficiency	
6-2	370-374	with	
6-3	375-379	Node	
6-4	380-387	Package	
6-5	388-395	Manager	
6-6	396-397	(	
6-7	397-400	npm	
6-8	400-401	)	
6-9	401-402	,	
6-10	403-410	Angular	
6-11	411-414	CLI	
6-12	414-415	,	
6-13	416-423	Angular	
6-14	423-424	,	
6-15	425-435	TypeScript	
6-16	435-436	,	
6-17	437-447	JavaScript	
6-18	447-448	,	
6-19	449-454	HTML5	
6-20	454-455	,	
6-21	455-458	CSS	
6-22	458-459	,	
6-23	460-464	RxJS	
6-24	464-465	,	
6-25	466-469	Git	
6-26	470-473	and	
6-27	474-481	Empathy	
6-28	481-482	.	

#Text=Deep knowledge of AngularJS practices and commonly used modules based on extensive work experience.
7-1	483-487	Deep	
7-2	488-497	knowledge	
7-3	498-500	of	
7-4	501-510	AngularJS	
7-5	511-520	practices	
7-6	521-524	and	
7-7	525-533	commonly	
7-8	534-538	used	
7-9	539-546	modules	
7-10	547-552	based	
7-11	553-555	on	
7-12	556-565	extensive	
7-13	566-570	work	
7-14	571-581	experience	
7-15	581-582	.	

#Text=Creating self-contained, reusable, and testable modules and components.
8-1	583-591	Creating	
8-2	592-606	self-contained	
8-3	606-607	,	
8-4	608-616	reusable	
8-5	616-617	,	
8-6	618-621	and	
8-7	622-630	testable	
8-8	631-638	modules	
8-9	639-642	and	
8-10	643-653	components	
8-11	653-654	.	

#Text=Ability to provide SEO solutions for single page apps.
9-1	655-662	Ability	
9-2	663-665	to	
9-3	666-673	provide	
9-4	674-677	SEO	
9-5	678-687	solutions	
9-6	688-691	for	
9-7	692-698	single	
9-8	699-703	page	
9-9	704-708	apps	
9-10	708-709	.	

#Text=Validating user actions on the client side and providing responsive feedback.
10-1	710-720	Validating	
10-2	721-725	user	
10-3	726-733	actions	
10-4	734-736	on	
10-5	737-740	the	
10-6	741-747	client	
10-7	748-752	side	
10-8	753-756	and	
10-9	757-766	providing	
10-10	767-777	responsive	
10-11	778-786	feedback	
10-12	786-787	.	

#Text=Creating custom, general use modules and components which extend the elements and modules of core AngularJS.
11-1	788-796	Creating	
11-2	797-803	custom	
11-3	803-804	,	
11-4	805-812	general	
11-5	813-816	use	
11-6	817-824	modules	
11-7	825-828	and	
11-8	829-839	components	
11-9	840-845	which	
11-10	846-852	extend	
11-11	853-856	the	
11-12	857-865	elements	
11-13	866-869	and	
11-14	870-877	modules	
11-15	878-880	of	
11-16	881-885	core	
11-17	886-895	AngularJS	
11-18	895-896	.	

#Text=Architecting and automating the build process for production, using task runners or scripts.
12-1	897-909	Architecting	
12-2	910-913	and	
12-3	914-924	automating	
12-4	925-928	the	
12-5	929-934	build	
12-6	935-942	process	
12-7	943-946	for	
12-8	947-957	production	
12-9	957-958	,	
12-10	959-964	using	
12-11	965-969	task	
12-12	970-977	runners	
12-13	978-980	or	
12-14	981-988	scripts	
12-15	988-989	.	

#Text=Writing extensive unit tests using automated TDD tasks.
13-1	990-997	Writing	
13-2	998-1007	extensive	
13-3	1008-1012	unit	
13-4	1013-1018	tests	
13-5	1019-1024	using	
13-6	1025-1034	automated	
13-7	1035-1038	TDD	
13-8	1039-1044	tasks	
13-9	1044-1045	.	

#Text=Creating e2e test suites for all components.
14-1	1046-1054	Creating	
14-2	1055-1058	e2e	
14-3	1059-1063	test	
14-4	1064-1070	suites	
14-5	1071-1074	for	
14-6	1075-1078	all	
14-7	1079-1089	components	
14-8	1089-1090	.	

#Text=Creating configuration, build, and test scripts for Continuous Integration environments Deep knowledge of AngularJS practices and commonly used modules based on extensive work experience Delivering a complete front end application Ensuring high performance on mobile and desktop Writing tested, idiomatic, and documented JavaScript, HTML and CSS Coordinating the workflow between the graphic designer, the HTML coder, and candidates self Cooperating with the back-end developer in the process of building the RESTful API Creating self-contained, reusable, and testable modules and components Ability to provide SEO solutions for single page apps Validating user actions on the client side and providing responsive feedback Creating custom, general use modules and components which extend the elements and modules of core AngularJS Architecting and automating the build process for production, using task runners or scripts Writing extensive unit tests using automated TDD tasks Creating e2e test suites for all components Creating configuration, build, and test scripts for Continuous Integration environments
15-1	1091-1099	Creating	
15-2	1100-1113	configuration	
15-3	1113-1114	,	
15-4	1115-1120	build	
15-5	1120-1121	,	
15-6	1122-1125	and	
15-7	1126-1130	test	
15-8	1131-1138	scripts	
15-9	1139-1142	for	
15-10	1143-1153	Continuous	
15-11	1154-1165	Integration	
15-12	1166-1178	environments	
15-13	1179-1183	Deep	
15-14	1184-1193	knowledge	
15-15	1194-1196	of	
15-16	1197-1206	AngularJS	
15-17	1207-1216	practices	
15-18	1217-1220	and	
15-19	1221-1229	commonly	
15-20	1230-1234	used	
15-21	1235-1242	modules	
15-22	1243-1248	based	
15-23	1249-1251	on	
15-24	1252-1261	extensive	
15-25	1262-1266	work	
15-26	1267-1277	experience	
15-27	1278-1288	Delivering	
15-28	1289-1290	a	
15-29	1291-1299	complete	
15-30	1300-1305	front	
15-31	1306-1309	end	
15-32	1310-1321	application	
15-33	1322-1330	Ensuring	
15-34	1331-1335	high	
15-35	1336-1347	performance	
15-36	1348-1350	on	
15-37	1351-1357	mobile	
15-38	1358-1361	and	
15-39	1362-1369	desktop	
15-40	1370-1377	Writing	
15-41	1378-1384	tested	
15-42	1384-1385	,	
15-43	1386-1395	idiomatic	
15-44	1395-1396	,	
15-45	1397-1400	and	
15-46	1401-1411	documented	
15-47	1412-1422	JavaScript	
15-48	1422-1423	,	
15-49	1424-1428	HTML	
15-50	1429-1432	and	
15-51	1433-1436	CSS	
15-52	1437-1449	Coordinating	
15-53	1450-1453	the	
15-54	1454-1462	workflow	
15-55	1463-1470	between	
15-56	1471-1474	the	
15-57	1475-1482	graphic	
15-58	1483-1491	designer	
15-59	1491-1492	,	
15-60	1493-1496	the	
15-61	1497-1501	HTML	
15-62	1502-1507	coder	
15-63	1507-1508	,	
15-64	1509-1512	and	
15-65	1513-1523	candidates	
15-66	1524-1528	self	
15-67	1529-1540	Cooperating	
15-68	1541-1545	with	
15-69	1546-1549	the	
15-70	1550-1558	back-end	
15-71	1559-1568	developer	
15-72	1569-1571	in	
15-73	1572-1575	the	
15-74	1576-1583	process	
15-75	1584-1586	of	
15-76	1587-1595	building	
15-77	1596-1599	the	
15-78	1600-1607	RESTful	
15-79	1608-1611	API	
15-80	1612-1620	Creating	
15-81	1621-1635	self-contained	
15-82	1635-1636	,	
15-83	1637-1645	reusable	
15-84	1645-1646	,	
15-85	1647-1650	and	
15-86	1651-1659	testable	
15-87	1660-1667	modules	
15-88	1668-1671	and	
15-89	1672-1682	components	
15-90	1683-1690	Ability	
15-91	1691-1693	to	
15-92	1694-1701	provide	
15-93	1702-1705	SEO	
15-94	1706-1715	solutions	
15-95	1716-1719	for	
15-96	1720-1726	single	
15-97	1727-1731	page	
15-98	1732-1736	apps	
15-99	1737-1747	Validating	
15-100	1748-1752	user	
15-101	1753-1760	actions	
15-102	1761-1763	on	
15-103	1764-1767	the	
15-104	1768-1774	client	
15-105	1775-1779	side	
15-106	1780-1783	and	
15-107	1784-1793	providing	
15-108	1794-1804	responsive	
15-109	1805-1813	feedback	
15-110	1814-1822	Creating	
15-111	1823-1829	custom	
15-112	1829-1830	,	
15-113	1831-1838	general	
15-114	1839-1842	use	
15-115	1843-1850	modules	
15-116	1851-1854	and	
15-117	1855-1865	components	
15-118	1866-1871	which	
15-119	1872-1878	extend	
15-120	1879-1882	the	
15-121	1883-1891	elements	
15-122	1892-1895	and	
15-123	1896-1903	modules	
15-124	1904-1906	of	
15-125	1907-1911	core	
15-126	1912-1921	AngularJS	
15-127	1922-1934	Architecting	
15-128	1935-1938	and	
15-129	1939-1949	automating	
15-130	1950-1953	the	
15-131	1954-1959	build	
15-132	1960-1967	process	
15-133	1968-1971	for	
15-134	1972-1982	production	
15-135	1982-1983	,	
15-136	1984-1989	using	
15-137	1990-1994	task	
15-138	1995-2002	runners	
15-139	2003-2005	or	
15-140	2006-2013	scripts	
15-141	2014-2021	Writing	
15-142	2022-2031	extensive	
15-143	2032-2036	unit	
15-144	2037-2042	tests	
15-145	2043-2048	using	
15-146	2049-2058	automated	
15-147	2059-2062	TDD	
15-148	2063-2068	tasks	
15-149	2069-2077	Creating	
15-150	2078-2081	e2e	
15-151	2082-2086	test	
15-152	2087-2093	suites	
15-153	2094-2097	for	
15-154	2098-2101	all	
15-155	2102-2112	components	
15-156	2113-2121	Creating	
15-157	2122-2135	configuration	
15-158	2135-2136	,	
15-159	2137-2142	build	
15-160	2142-2143	,	
15-161	2144-2147	and	
15-162	2148-2152	test	
15-163	2153-2160	scripts	
15-164	2161-2164	for	
15-165	2165-2175	Continuous	
15-166	2176-2187	Integration	
15-167	2188-2200	environments	
