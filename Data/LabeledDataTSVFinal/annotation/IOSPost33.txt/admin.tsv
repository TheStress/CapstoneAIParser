#FORMAT=WebAnno TSV 3.3
#T_SP=custom.Span|label


#Text=Job DescriptionWe are looking for a Swift developer responsible for the development and maintenance of applications aimed towards iOS and OS X, including mobile phones, tablets, and full-fledged computers.
1-1	0-3	Job	_	
1-2	4-17	DescriptionWe	_	
1-3	18-21	are	_	
1-4	22-29	looking	_	
1-5	30-33	for	_	
1-6	34-35	a	_	
1-7	36-41	Swift	Hard Skill	
1-8	42-51	developer	_	
1-9	52-63	responsible	_	
1-10	64-67	for	_	
1-11	68-71	the	_	
1-12	72-83	development	_	
1-13	84-87	and	_	
1-14	88-99	maintenance	_	
1-15	100-102	of	_	
1-16	103-115	applications	_	
1-17	116-121	aimed	_	
1-18	122-129	towards	_	
1-19	130-133	iOS	_	
1-20	134-137	and	_	
1-21	138-140	OS	_	
1-22	141-142	X	_	
1-23	142-143	,	_	
1-24	144-153	including	_	
1-25	154-160	mobile	_	
1-26	161-167	phones	_	
1-27	167-168	,	_	
1-28	169-176	tablets	_	
1-29	176-177	,	_	
1-30	178-181	and	_	
1-31	182-194	full-fledged	_	
1-32	195-204	computers	_	
1-33	204-205	.	_	

#Text=Your primary focus will be the development of such applications and their integration with back-end services.
2-1	206-210	Your	_	
2-2	211-218	primary	_	
2-3	219-224	focus	_	
2-4	225-229	will	_	
2-5	230-232	be	_	
2-6	233-236	the	_	
2-7	237-248	development	_	
2-8	249-251	of	_	
2-9	252-256	such	_	
2-10	257-269	applications	_	
2-11	270-273	and	_	
2-12	274-279	their	_	
2-13	280-291	integration	_	
2-14	292-296	with	_	
2-15	297-305	back-end	_	
2-16	306-314	services	_	
2-17	314-315	.	_	

#Text=You will be working alongside other engineers and developers working on different... layers of the infrastructure.
3-1	316-319	You	_	
3-2	320-324	will	_	
3-3	325-327	be	_	
3-4	328-335	working	_	
3-5	336-345	alongside	_	
3-6	346-351	other	_	
3-7	352-361	engineers	_	
3-8	362-365	and	_	
3-9	366-376	developers	_	
3-10	377-384	working	_	
3-11	385-387	on	_	
3-12	388-397	different	_	
3-13	397-398	.	_	
3-14	398-399	.	_	
3-15	399-400	.	_	
3-16	401-407	layers	_	
3-17	408-410	of	_	
3-18	411-414	the	_	
3-19	415-429	infrastructure	_	
3-20	429-430	.	_	

#Text=Therefore, a commitment to collaborative problem solving, sophisticated design, and creating quality products is essential.Responsibilities Design and build applications for iOS and OS X Ensure the performance, quality, and responsiveness of applications Collaborate with a team to define, design, and ship new features Identify and correct bottlenecks and fix bugs Help maintain code quality, organization and automatizationSkills Proficient in Swift, with a good knowledge of its ecosystems Solid understanding of object-oriented programming Experience with Cocoa APIs on OS X Good knowledge of performance limits and characteristics Knowledge of memory management and multi-threading Experience with embedded databases and other system datastores Familiarity with RESTful APIs to connect to back-end services Good sense of UI design and a user-oriented focus Knowledge of low-level C-based libraries is a plus Implementation of automated testing platforms and unit tests Knack for benchmarking and optimization Understanding of Apples design principles and interface guidelines Proficient understanding of code versioning tools Familiarity with continuous integration Proficient in Swift, with a good knowledge of its ecosystems Solid understanding of object-oriented programming Experience with Cocoa APIs on OS X Good knowledge of performance limits and characteristics Knowledge of memory management and multi-threading Experience with embedded databases and other system datastores Familiarity with RESTful APIs to connect to back-end services Good sense of UI design and a user-oriented focus Implementation of automated testing platforms and unit tests Knack for benchmarking and optimization Understanding of Apples design principles and interface guidelines Proficient understanding of code versioning tools Familiarity with continuous integration We are looking for a Swift developer responsible for the development and maintenance of applications aimed towards iOS and OS X, including mobile phones, tablets, and full-fledged computers Your primary focus will be the development of such applications and their integration with back-end services You will be working alongside other engineers and developers working on different layers of the infrastructure Design and build applications for iOS and OS X Ensure the performance, quality, and responsiveness of applications Collaborate with a team to define, design, and ship new features Identify and correct bottlenecks and fix bugs Help maintain code quality, organization and automatization
4-1	431-440	Therefore	_	
4-2	440-441	,	_	
4-3	442-443	a	_	
4-4	444-454	commitment	_	
4-5	455-457	to	_	
4-6	458-471	collaborative	Soft Skill	
4-7	472-479	problem	_	
4-8	480-487	solving	_	
4-9	487-488	,	_	
4-10	489-502	sophisticated	_	
4-11	503-509	design	Hard Skill	
4-12	509-510	,	_	
4-13	511-514	and	_	
4-14	515-523	creating	_	
4-15	524-531	quality	_	
4-16	532-540	products	_	
4-17	541-543	is	_	
4-18	544-570	essential.Responsibilities	_	
4-19	571-577	Design	Hard Skill	
4-20	578-581	and	_	
4-21	582-587	build	_	
4-22	588-600	applications	_	
4-23	601-604	for	_	
4-24	605-608	iOS	_	
4-25	609-612	and	_	
4-26	613-615	OS	_	
4-27	616-617	X	_	
4-28	618-624	Ensure	_	
4-29	625-628	the	_	
4-30	629-640	performance	_	
4-31	640-641	,	_	
4-32	642-649	quality	_	
4-33	649-650	,	_	
4-34	651-654	and	_	
4-35	655-669	responsiveness	_	
4-36	670-672	of	_	
4-37	673-685	applications	_	
4-38	686-697	Collaborate	Soft Skill	
4-39	698-702	with	_	
4-40	703-704	a	_	
4-41	705-709	team	_	
4-42	710-712	to	_	
4-43	713-719	define	_	
4-44	719-720	,	_	
4-45	721-727	design	Hard Skill	
4-46	727-728	,	_	
4-47	729-732	and	_	
4-48	733-737	ship	_	
4-49	738-741	new	_	
4-50	742-750	features	_	
4-51	751-759	Identify	_	
4-52	760-763	and	_	
4-53	764-771	correct	_	
4-54	772-783	bottlenecks	_	
4-55	784-787	and	_	
4-56	788-791	fix	_	
4-57	792-796	bugs	_	
4-58	797-801	Help	_	
4-59	802-810	maintain	_	
4-60	811-815	code	_	
4-61	816-823	quality	_	
4-62	823-824	,	_	
4-63	825-837	organization	_	
4-64	838-841	and	_	
4-65	842-862	automatizationSkills	_	
4-66	863-873	Proficient	_	
4-67	874-876	in	_	
4-68	877-882	Swift	Hard Skill	
4-69	882-883	,	_	
4-70	884-888	with	_	
4-71	889-890	a	_	
4-72	891-895	good	_	
4-73	896-905	knowledge	_	
4-74	906-908	of	_	
4-75	909-912	its	_	
4-76	913-923	ecosystems	_	
4-77	924-929	Solid	_	
4-78	930-943	understanding	_	
4-79	944-946	of	_	
4-80	947-962	object-oriented	_	
4-81	963-974	programming	Hard Skill	
4-82	975-985	Experience	_	
4-83	986-990	with	_	
4-84	991-996	Cocoa	_	
4-85	997-1001	APIs	_	
4-86	1002-1004	on	_	
4-87	1005-1007	OS	_	
4-88	1008-1009	X	_	
4-89	1010-1014	Good	_	
4-90	1015-1024	knowledge	_	
4-91	1025-1027	of	_	
4-92	1028-1039	performance	_	
4-93	1040-1046	limits	_	
4-94	1047-1050	and	_	
4-95	1051-1066	characteristics	_	
4-96	1067-1076	Knowledge	_	
4-97	1077-1079	of	_	
4-98	1080-1086	memory	_	
4-99	1087-1097	management	_	
4-100	1098-1101	and	_	
4-101	1102-1117	multi-threading	_	
4-102	1118-1128	Experience	_	
4-103	1129-1133	with	_	
4-104	1134-1142	embedded	_	
4-105	1143-1152	databases	_	
4-106	1153-1156	and	_	
4-107	1157-1162	other	_	
4-108	1163-1169	system	_	
4-109	1170-1180	datastores	_	
4-110	1181-1192	Familiarity	_	
4-111	1193-1197	with	_	
4-112	1198-1205	RESTful	_	
4-113	1206-1210	APIs	_	
4-114	1211-1213	to	_	
4-115	1214-1221	connect	_	
4-116	1222-1224	to	_	
4-117	1225-1233	back-end	_	
4-118	1234-1242	services	_	
4-119	1243-1247	Good	_	
4-120	1248-1253	sense	_	
4-121	1254-1256	of	_	
4-122	1257-1259	UI	_	
4-123	1260-1266	design	Hard Skill	
4-124	1267-1270	and	_	
4-125	1271-1272	a	_	
4-126	1273-1286	user-oriented	_	
4-127	1287-1292	focus	_	
4-128	1293-1302	Knowledge	_	
4-129	1303-1305	of	_	
4-130	1306-1315	low-level	_	
4-131	1316-1323	C-based	_	
4-132	1324-1333	libraries	_	
4-133	1334-1336	is	_	
4-134	1337-1338	a	_	
4-135	1339-1343	plus	_	
4-136	1344-1358	Implementation	Hard Skill	
4-137	1359-1361	of	_	
4-138	1362-1371	automated	_	
4-139	1372-1379	testing	_	
4-140	1380-1389	platforms	_	
4-141	1390-1393	and	_	
4-142	1394-1398	unit	_	
4-143	1399-1404	tests	_	
4-144	1405-1410	Knack	_	
4-145	1411-1414	for	_	
4-146	1415-1427	benchmarking	_	
4-147	1428-1431	and	_	
4-148	1432-1444	optimization	_	
4-149	1445-1458	Understanding	_	
4-150	1459-1461	of	_	
4-151	1462-1468	Apples	_	
4-152	1469-1475	design	Hard Skill	
4-153	1476-1486	principles	_	
4-154	1487-1490	and	_	
4-155	1491-1500	interface	_	
4-156	1501-1511	guidelines	_	
4-157	1512-1522	Proficient	_	
4-158	1523-1536	understanding	_	
4-159	1537-1539	of	_	
4-160	1540-1544	code	_	
4-161	1545-1555	versioning	_	
4-162	1556-1561	tools	_	
4-163	1562-1573	Familiarity	_	
4-164	1574-1578	with	_	
4-165	1579-1589	continuous	_	
4-166	1590-1601	integration	_	
4-167	1602-1612	Proficient	_	
4-168	1613-1615	in	_	
4-169	1616-1621	Swift	Hard Skill	
4-170	1621-1622	,	_	
4-171	1623-1627	with	_	
4-172	1628-1629	a	_	
4-173	1630-1634	good	_	
4-174	1635-1644	knowledge	_	
4-175	1645-1647	of	_	
4-176	1648-1651	its	_	
4-177	1652-1662	ecosystems	_	
4-178	1663-1668	Solid	_	
4-179	1669-1682	understanding	_	
4-180	1683-1685	of	_	
4-181	1686-1701	object-oriented	_	
4-182	1702-1713	programming	Hard Skill	
4-183	1714-1724	Experience	_	
4-184	1725-1729	with	_	
4-185	1730-1735	Cocoa	_	
4-186	1736-1740	APIs	_	
4-187	1741-1743	on	_	
4-188	1744-1746	OS	_	
4-189	1747-1748	X	_	
4-190	1749-1753	Good	_	
4-191	1754-1763	knowledge	_	
4-192	1764-1766	of	_	
4-193	1767-1778	performance	_	
4-194	1779-1785	limits	_	
4-195	1786-1789	and	_	
4-196	1790-1805	characteristics	_	
4-197	1806-1815	Knowledge	_	
4-198	1816-1818	of	_	
4-199	1819-1825	memory	_	
4-200	1826-1836	management	_	
4-201	1837-1840	and	_	
4-202	1841-1856	multi-threading	_	
4-203	1857-1867	Experience	_	
4-204	1868-1872	with	_	
4-205	1873-1881	embedded	_	
4-206	1882-1891	databases	_	
4-207	1892-1895	and	_	
4-208	1896-1901	other	_	
4-209	1902-1908	system	_	
4-210	1909-1919	datastores	_	
4-211	1920-1931	Familiarity	_	
4-212	1932-1936	with	_	
4-213	1937-1944	RESTful	_	
4-214	1945-1949	APIs	_	
4-215	1950-1952	to	_	
4-216	1953-1960	connect	_	
4-217	1961-1963	to	_	
4-218	1964-1972	back-end	_	
4-219	1973-1981	services	_	
4-220	1982-1986	Good	_	
4-221	1987-1992	sense	_	
4-222	1993-1995	of	_	
4-223	1996-1998	UI	_	
4-224	1999-2005	design	Hard Skill	
4-225	2006-2009	and	_	
4-226	2010-2011	a	_	
4-227	2012-2025	user-oriented	_	
4-228	2026-2031	focus	_	
4-229	2032-2046	Implementation	Hard Skill	
4-230	2047-2049	of	_	
4-231	2050-2059	automated	_	
4-232	2060-2067	testing	_	
4-233	2068-2077	platforms	_	
4-234	2078-2081	and	_	
4-235	2082-2086	unit	_	
4-236	2087-2092	tests	_	
4-237	2093-2098	Knack	_	
4-238	2099-2102	for	_	
4-239	2103-2115	benchmarking	_	
4-240	2116-2119	and	_	
4-241	2120-2132	optimization	_	
4-242	2133-2146	Understanding	_	
4-243	2147-2149	of	_	
4-244	2150-2156	Apples	_	
4-245	2157-2163	design	Hard Skill	
4-246	2164-2174	principles	_	
4-247	2175-2178	and	_	
4-248	2179-2188	interface	_	
4-249	2189-2199	guidelines	_	
4-250	2200-2210	Proficient	_	
4-251	2211-2224	understanding	_	
4-252	2225-2227	of	_	
4-253	2228-2232	code	_	
4-254	2233-2243	versioning	_	
4-255	2244-2249	tools	_	
4-256	2250-2261	Familiarity	_	
4-257	2262-2266	with	_	
4-258	2267-2277	continuous	_	
4-259	2278-2289	integration	_	
4-260	2290-2292	We	_	
4-261	2293-2296	are	_	
4-262	2297-2304	looking	_	
4-263	2305-2308	for	_	
4-264	2309-2310	a	_	
4-265	2311-2316	Swift	Hard Skill	
4-266	2317-2326	developer	_	
4-267	2327-2338	responsible	_	
4-268	2339-2342	for	_	
4-269	2343-2346	the	_	
4-270	2347-2358	development	_	
4-271	2359-2362	and	_	
4-272	2363-2374	maintenance	_	
4-273	2375-2377	of	_	
4-274	2378-2390	applications	_	
4-275	2391-2396	aimed	_	
4-276	2397-2404	towards	_	
4-277	2405-2408	iOS	_	
4-278	2409-2412	and	_	
4-279	2413-2415	OS	_	
4-280	2416-2417	X	_	
4-281	2417-2418	,	_	
4-282	2419-2428	including	_	
4-283	2429-2435	mobile	_	
4-284	2436-2442	phones	_	
4-285	2442-2443	,	_	
4-286	2444-2451	tablets	_	
4-287	2451-2452	,	_	
4-288	2453-2456	and	_	
4-289	2457-2469	full-fledged	_	
4-290	2470-2479	computers	_	
4-291	2480-2484	Your	_	
4-292	2485-2492	primary	_	
4-293	2493-2498	focus	_	
4-294	2499-2503	will	_	
4-295	2504-2506	be	_	
4-296	2507-2510	the	_	
4-297	2511-2522	development	_	
4-298	2523-2525	of	_	
4-299	2526-2530	such	_	
4-300	2531-2543	applications	_	
4-301	2544-2547	and	_	
4-302	2548-2553	their	_	
4-303	2554-2565	integration	_	
4-304	2566-2570	with	_	
4-305	2571-2579	back-end	_	
4-306	2580-2588	services	_	
4-307	2589-2592	You	_	
4-308	2593-2597	will	_	
4-309	2598-2600	be	_	
4-310	2601-2608	working	_	
4-311	2609-2618	alongside	_	
4-312	2619-2624	other	_	
4-313	2625-2634	engineers	_	
4-314	2635-2638	and	_	
4-315	2639-2649	developers	_	
4-316	2650-2657	working	_	
4-317	2658-2660	on	_	
4-318	2661-2670	different	_	
4-319	2671-2677	layers	_	
4-320	2678-2680	of	_	
4-321	2681-2684	the	_	
4-322	2685-2699	infrastructure	_	
4-323	2700-2706	Design	Hard Skill	
4-324	2707-2710	and	_	
4-325	2711-2716	build	_	
4-326	2717-2729	applications	_	
4-327	2730-2733	for	_	
4-328	2734-2737	iOS	_	
4-329	2738-2741	and	_	
4-330	2742-2744	OS	_	
4-331	2745-2746	X	_	
4-332	2747-2753	Ensure	_	
4-333	2754-2757	the	_	
4-334	2758-2769	performance	_	
4-335	2769-2770	,	_	
4-336	2771-2778	quality	_	
4-337	2778-2779	,	_	
4-338	2780-2783	and	_	
4-339	2784-2798	responsiveness	_	
4-340	2799-2801	of	_	
4-341	2802-2814	applications	_	
4-342	2815-2826	Collaborate	Soft Skill	
4-343	2827-2831	with	_	
4-344	2832-2833	a	_	
4-345	2834-2838	team	_	
4-346	2839-2841	to	_	
4-347	2842-2848	define	_	
4-348	2848-2849	,	_	
4-349	2850-2856	design	Hard Skill	
4-350	2856-2857	,	_	
4-351	2858-2861	and	_	
4-352	2862-2866	ship	_	
4-353	2867-2870	new	_	
4-354	2871-2879	features	_	
4-355	2880-2888	Identify	_	
4-356	2889-2892	and	_	
4-357	2893-2900	correct	_	
4-358	2901-2912	bottlenecks	_	
4-359	2913-2916	and	_	
4-360	2917-2920	fix	_	
4-361	2921-2925	bugs	_	
4-362	2926-2930	Help	_	
4-363	2931-2939	maintain	_	
4-364	2940-2944	code	_	
4-365	2945-2952	quality	_	
4-366	2952-2953	,	_	
4-367	2954-2966	organization	_	
4-368	2967-2970	and	_	
4-369	2971-2985	automatization	_	
