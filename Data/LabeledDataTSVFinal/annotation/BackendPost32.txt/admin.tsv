#FORMAT=WebAnno TSV 3.3
#T_SP=custom.Span|label


#Text=Role: Backend EngineerLocation: Plano, TX, NYC & Mountain View, CA/ Remote...Hire type: Fulltime.Salary: $110,000-120,000/Annum with BenefitsTop Must Have Skills:NodeJS/Typescript, AWS Elastic Kubernetes Service, AWS Relational Database ServiceMain Responsibilities- Implement back-end architecture components, tasks, and services to support Customer TV & Mobile businesses.- Conduct engineering activities, projects, research and/or operational tests in conformance to functional specifications, design requirements, operational capacities, and customer performance expectations.- Debug Production issues raised by customers and customer support teams, isolate the cause and work towards a fix.- Participate in meetings with other staff members to evaluate, plan, and troubleshoot; and to ensure proper interface between software, systems, and operational performance.- Exercise judgment in selecting methods, techniques, and evaluation criteria for obtaining results.- Algorithm development, back-end automation, problem solving and scalability architecture.Job Experience and Knowledge- 7-10 years of software development experience in a large-scale Production environment.- Experienced with multiple server-side languages including Typescript, Node.JS, and Python.- Strong working knowledge of popular backend libraries, such as Express, Mongoose, and Axios.
1-1	0-4	Role	_	
1-2	4-5	:	_	
1-3	6-13	Backend	_	
1-4	14-30	EngineerLocation	_	
1-5	30-31	:	_	
1-6	32-37	Plano	_	
1-7	37-38	,	_	
1-8	39-41	TX	_	
1-9	41-42	,	_	
1-10	43-46	NYC	_	
1-11	47-48	&	_	
1-12	49-57	Mountain	_	
1-13	58-62	View	_	
1-14	62-63	,	_	
1-15	64-66	CA	_	
1-16	66-67	/	_	
1-17	68-74	Remote	_	
1-18	74-75	.	_	
1-19	75-76	.	_	
1-20	76-77	.	_	
1-21	77-81	Hire	_	
1-22	82-86	type	_	
1-23	86-87	:	_	
1-24	88-103	Fulltime.Salary	_	
1-25	103-104	:	_	
1-26	105-113	$110,000	_	
1-27	113-114	-	_	
1-28	114-121	120,000	_	
1-29	121-122	/	_	
1-30	122-127	Annum	_	
1-31	128-132	with	_	
1-32	133-144	BenefitsTop	_	
1-33	145-149	Must	_	
1-34	150-154	Have	_	
1-35	155-161	Skills	_	
1-36	161-162	:	_	
1-37	162-168	NodeJS	_	
1-38	168-169	/	_	
1-39	169-179	Typescript	Hard Skill	
1-40	179-180	,	_	
1-41	181-184	AWS	Hard Skill	
1-42	185-192	Elastic	_	
1-43	193-203	Kubernetes	Hard Skill	
1-44	204-211	Service	_	
1-45	211-212	,	_	
1-46	213-216	AWS	Hard Skill	
1-47	217-227	Relational	_	
1-48	228-236	Database	_	
1-49	237-248	ServiceMain	_	
1-50	249-265	Responsibilities	_	
1-51	265-266	-	_	
1-52	267-276	Implement	_	
1-53	277-285	back-end	_	
1-54	286-298	architecture	_	
1-55	299-309	components	_	
1-56	309-310	,	_	
1-57	311-316	tasks	_	
1-58	316-317	,	_	
1-59	318-321	and	_	
1-60	322-330	services	_	
1-61	331-333	to	_	
1-62	334-341	support	_	
1-63	342-350	Customer	_	
1-64	351-353	TV	_	
1-65	354-355	&	_	
1-66	356-362	Mobile	_	
1-67	363-373	businesses	_	
1-68	373-374	.	_	
1-69	374-375	-	_	
1-70	376-383	Conduct	_	
1-71	384-395	engineering	_	
1-72	396-406	activities	_	
1-73	406-407	,	_	
1-74	408-416	projects	_	
1-75	416-417	,	_	
1-76	418-426	research	_	
1-77	427-430	and	_	
1-78	430-431	/	_	
1-79	431-433	or	_	
1-80	434-445	operational	_	
1-81	446-451	tests	_	
1-82	452-454	in	_	
1-83	455-466	conformance	_	
1-84	467-469	to	_	
1-85	470-480	functional	_	
1-86	481-495	specifications	_	
1-87	495-496	,	_	
1-88	497-503	design	Hard Skill	
1-89	504-516	requirements	_	
1-90	516-517	,	_	
1-91	518-529	operational	_	
1-92	530-540	capacities	_	
1-93	540-541	,	_	
1-94	542-545	and	_	
1-95	546-554	customer	_	
1-96	555-566	performance	_	
1-97	567-579	expectations	_	
1-98	579-580	.	_	
1-99	580-581	-	_	
1-100	582-587	Debug	Hard Skill	
1-101	588-598	Production	_	
1-102	599-605	issues	_	
1-103	606-612	raised	_	
1-104	613-615	by	_	
1-105	616-625	customers	_	
1-106	626-629	and	_	
1-107	630-638	customer	_	
1-108	639-646	support	_	
1-109	647-652	teams	_	
1-110	652-653	,	_	
1-111	654-661	isolate	_	
1-112	662-665	the	_	
1-113	666-671	cause	_	
1-114	672-675	and	_	
1-115	676-680	work	_	
1-116	681-688	towards	_	
1-117	689-690	a	_	
1-118	691-694	fix	_	
1-119	694-695	.	_	
1-120	695-696	-	_	
1-121	697-708	Participate	_	
1-122	709-711	in	_	
1-123	712-720	meetings	_	
1-124	721-725	with	_	
1-125	726-731	other	_	
1-126	732-737	staff	_	
1-127	738-745	members	_	
1-128	746-748	to	_	
1-129	749-757	evaluate	_	
1-130	757-758	,	_	
1-131	759-763	plan	Soft Skill	
1-132	763-764	,	_	
1-133	765-768	and	_	
1-134	769-781	troubleshoot	_	
1-135	781-782	;	_	
1-136	783-786	and	_	
1-137	787-789	to	_	
1-138	790-796	ensure	_	
1-139	797-803	proper	_	
1-140	804-813	interface	_	
1-141	814-821	between	_	
1-142	822-830	software	_	
1-143	830-831	,	_	
1-144	832-839	systems	_	
1-145	839-840	,	_	
1-146	841-844	and	_	
1-147	845-856	operational	_	
1-148	857-868	performance	_	
1-149	868-869	.	_	
1-150	869-870	-	_	
1-151	871-879	Exercise	_	
1-152	880-888	judgment	_	
1-153	889-891	in	_	
1-154	892-901	selecting	_	
1-155	902-909	methods	_	
1-156	909-910	,	_	
1-157	911-921	techniques	_	
1-158	921-922	,	_	
1-159	923-926	and	_	
1-160	927-937	evaluation	_	
1-161	938-946	criteria	_	
1-162	947-950	for	_	
1-163	951-960	obtaining	_	
1-164	961-968	results	_	
1-165	968-969	.	_	
1-166	969-970	-	_	
1-167	971-980	Algorithm	_	
1-168	981-992	development	_	
1-169	992-993	,	_	
1-170	994-1002	back-end	_	
1-171	1003-1013	automation	_	
1-172	1013-1014	,	_	
1-173	1015-1022	problem	_	
1-174	1023-1030	solving	_	
1-175	1031-1034	and	_	
1-176	1035-1046	scalability	_	
1-177	1047-1063	architecture.Job	_	
1-178	1064-1074	Experience	_	
1-179	1075-1078	and	_	
1-180	1079-1088	Knowledge	_	
1-181	1088-1089	-	_	
1-182	1090-1091	7	_	
1-183	1091-1092	-	_	
1-184	1092-1094	10	_	
1-185	1095-1100	years	_	
1-186	1101-1103	of	_	
1-187	1104-1112	software	_	
1-188	1113-1124	development	_	
1-189	1125-1135	experience	_	
1-190	1136-1138	in	_	
1-191	1139-1140	a	_	
1-192	1141-1152	large-scale	_	
1-193	1153-1163	Production	_	
1-194	1164-1175	environment	_	
1-195	1175-1176	.	_	
1-196	1176-1177	-	_	
1-197	1178-1189	Experienced	_	
1-198	1190-1194	with	_	
1-199	1195-1203	multiple	_	
1-200	1204-1215	server-side	_	
1-201	1216-1225	languages	_	
1-202	1226-1235	including	_	
1-203	1236-1246	Typescript	Hard Skill	
1-204	1246-1247	,	_	
1-205	1248-1255	Node.JS	_	
1-206	1255-1256	,	_	
1-207	1257-1260	and	_	
1-208	1261-1267	Python	Hard Skill	
1-209	1267-1268	.	_	
1-210	1268-1269	-	_	
1-211	1270-1276	Strong	_	
1-212	1277-1284	working	_	
1-213	1285-1294	knowledge	_	
1-214	1295-1297	of	_	
1-215	1298-1305	popular	_	
1-216	1306-1313	backend	_	
1-217	1314-1323	libraries	_	
1-218	1323-1324	,	_	
1-219	1325-1329	such	_	
1-220	1330-1332	as	_	
1-221	1333-1340	Express	_	
1-222	1340-1341	,	_	
1-223	1342-1350	Mongoose	_	
1-224	1350-1351	,	_	
1-225	1352-1355	and	_	
1-226	1356-1361	Axios	_	
1-227	1361-1362	.	_	

#Text=NestJS experience is a major plus.- Proficiency with traditional RDBMS as well as NoSQL databases including MongoDB/Document DB, Postgres, DynamoDB, and Elasticsearch.- Experience working with AWS Products like EKS, ECR, S3, RDS, IAM, VPC.- Proficiency with Git, Docker, Kubernetes is a MUST.- Strong working knowledge of Linux distributions and effective use of the command line.- Strong knowledge of security best practices.- Strong understanding of data structures and algorithms.- Ability to deliver and accept feedback on code and system design.- Strong ability to debug unfamiliar distributed architectures and isolate problems.- Experience working with ML models such as via AWS Personalize a major plus.- Experience in Test Driven Development and Continuous Integration pipelines a plus.Qualifications- Ability to express complex ideas and concepts verbally and in writing to a team of both technical and non-technical contributors.- Highly detail-oriented with strong analytical skills.- Works effectively with partners in different cultures and geographies.- Possesses a positive attitude, is self-motivated, and is always learning something new.- Seeks solutions rather than blame, believes in success through teamwork.- Exercises judgement within defined procedures and practices to determine appropriate action NodeJS/Typescript, AWS Elastic Kubernetes Service, AWS Relational Database Service 7-10 years of software development experience in a large-scale Production environment Experienced with multiple server-side languages including Typescript, Node.JS, and Python Strong working knowledge of popular backend libraries, such as Express, Mongoose, and Axios NestJS experience is a major plus Proficiency with traditional RDBMS as well as NoSQL databases including MongoDB/Document DB, Postgres, DynamoDB, and Elasticsearch Experience working with AWS Products like EKS, ECR, S3, RDS, IAM, VPC Proficiency with Git, Docker, Kubernetes is a MUST Strong working knowledge of Linux distributions and effective use of the command line Strong knowledge of security best practices Strong understanding of data structures and algorithms Ability to deliver and accept feedback on code and system design Strong ability to debug unfamiliar distributed architectures and isolate problems Experience working with ML models such as via AWS Personalize a major plus Ability to express complex ideas and concepts verbally and in writing to a team of both technical and non-technical contributors Highly detail-oriented with strong analytical skills Works effectively with partners in different cultures and geographies Possesses a positive attitude, is self-motivated, and is always learning something new Seeks solutions rather than blame, believes in success through teamwork Exercises judgement within defined procedures and practices to determine appropriate action Implement back-end architecture components, tasks, and services to support Customer TV & Mobile businesses Conduct engineering activities, projects, research and/or operational tests in conformance to functional specifications, design requirements, operational capacities, and customer performance expectations Debug Production issues raised by customers and customer support teams, isolate the cause and work towards a fix Participate in meetings with other staff members to evaluate, plan, and troubleshoot; and to ensure proper interface between software, systems, and operational performance Exercise judgment in selecting methods, techniques, and evaluation criteria for obtaining results Algorithm development, back-end automation, problem solving and scalability architecture Salary: $110,000-120,000/Annum with Benefits
2-1	1363-1369	NestJS	_	
2-2	1370-1380	experience	_	
2-3	1381-1383	is	_	
2-4	1384-1385	a	_	
2-5	1386-1391	major	_	
2-6	1392-1396	plus	_	
2-7	1396-1397	.	_	
2-8	1397-1398	-	_	
2-9	1399-1410	Proficiency	_	
2-10	1411-1415	with	_	
2-11	1416-1427	traditional	_	
2-12	1428-1433	RDBMS	_	
2-13	1434-1436	as	_	
2-14	1437-1441	well	_	
2-15	1442-1444	as	_	
2-16	1445-1450	NoSQL	Hard Skill	
2-17	1451-1460	databases	_	
2-18	1461-1470	including	_	
2-19	1471-1478	MongoDB	Hard Skill	
2-20	1478-1479	/	_	
2-21	1479-1487	Document	_	
2-22	1488-1490	DB	_	
2-23	1490-1491	,	_	
2-24	1492-1500	Postgres	Hard Skill	
2-25	1500-1501	,	_	
2-26	1502-1510	DynamoDB	Hard Skill	
2-27	1510-1511	,	_	
2-28	1512-1515	and	_	
2-29	1516-1529	Elasticsearch	Hard Skill	
2-30	1529-1530	.	_	
2-31	1530-1531	-	_	
2-32	1532-1542	Experience	_	
2-33	1543-1550	working	_	
2-34	1551-1555	with	_	
2-35	1556-1559	AWS	Hard Skill	
2-36	1560-1568	Products	_	
2-37	1569-1573	like	_	
2-38	1574-1577	EKS	_	
2-39	1577-1578	,	_	
2-40	1579-1582	ECR	_	
2-41	1582-1583	,	_	
2-42	1584-1586	S3	_	
2-43	1586-1587	,	_	
2-44	1588-1591	RDS	_	
2-45	1591-1592	,	_	
2-46	1593-1596	IAM	_	
2-47	1596-1597	,	_	
2-48	1598-1601	VPC	_	
2-49	1601-1602	.	_	
2-50	1602-1603	-	_	
2-51	1604-1615	Proficiency	_	
2-52	1616-1620	with	_	
2-53	1621-1624	Git	Hard Skill	
2-54	1624-1625	,	_	
2-55	1626-1632	Docker	Hard Skill	
2-56	1632-1633	,	_	
2-57	1634-1644	Kubernetes	Hard Skill	
2-58	1645-1647	is	_	
2-59	1648-1649	a	_	
2-60	1650-1654	MUST	_	
2-61	1654-1655	.	_	
2-62	1655-1656	-	_	
2-63	1657-1663	Strong	_	
2-64	1664-1671	working	_	
2-65	1672-1681	knowledge	_	
2-66	1682-1684	of	_	
2-67	1685-1690	Linux	Hard Skill	
2-68	1691-1704	distributions	_	
2-69	1705-1708	and	_	
2-70	1709-1718	effective	_	
2-71	1719-1722	use	_	
2-72	1723-1725	of	_	
2-73	1726-1729	the	_	
2-74	1730-1737	command	_	
2-75	1738-1742	line	_	
2-76	1742-1743	.	_	
2-77	1743-1744	-	_	
2-78	1745-1751	Strong	_	
2-79	1752-1761	knowledge	_	
2-80	1762-1764	of	_	
2-81	1765-1773	security	_	
2-82	1774-1778	best	_	
2-83	1779-1788	practices	_	
2-84	1788-1789	.	_	
2-85	1789-1790	-	_	
2-86	1791-1797	Strong	_	
2-87	1798-1811	understanding	_	
2-88	1812-1814	of	_	
2-89	1815-1819	data	_	
2-90	1820-1830	structures	_	
2-91	1831-1834	and	_	
2-92	1835-1845	algorithms	_	
2-93	1845-1846	.	_	
2-94	1846-1847	-	_	
2-95	1848-1855	Ability	_	
2-96	1856-1858	to	_	
2-97	1859-1866	deliver	_	
2-98	1867-1870	and	_	
2-99	1871-1877	accept	_	
2-100	1878-1886	feedback	_	
2-101	1887-1889	on	_	
2-102	1890-1894	code	_	
2-103	1895-1898	and	_	
2-104	1899-1905	system	_	
2-105	1906-1912	design	Hard Skill	
2-106	1912-1913	.	_	
2-107	1913-1914	-	_	
2-108	1915-1921	Strong	_	
2-109	1922-1929	ability	_	
2-110	1930-1932	to	_	
2-111	1933-1938	debug	Hard Skill	
2-112	1939-1949	unfamiliar	_	
2-113	1950-1961	distributed	_	
2-114	1962-1975	architectures	_	
2-115	1976-1979	and	_	
2-116	1980-1987	isolate	_	
2-117	1988-1996	problems	_	
2-118	1996-1997	.	_	
2-119	1997-1998	-	_	
2-120	1999-2009	Experience	_	
2-121	2010-2017	working	_	
2-122	2018-2022	with	_	
2-123	2023-2025	ML	_	
2-124	2026-2032	models	_	
2-125	2033-2037	such	_	
2-126	2038-2040	as	_	
2-127	2041-2044	via	_	
2-128	2045-2048	AWS	Hard Skill	
2-129	2049-2060	Personalize	_	
2-130	2061-2062	a	_	
2-131	2063-2068	major	_	
2-132	2069-2073	plus	_	
2-133	2073-2074	.	_	
2-134	2074-2075	-	_	
2-135	2076-2086	Experience	_	
2-136	2087-2089	in	_	
2-137	2090-2094	Test	_	
2-138	2095-2101	Driven	_	
2-139	2102-2113	Development	_	
2-140	2114-2117	and	_	
2-141	2118-2128	Continuous	_	
2-142	2129-2140	Integration	_	
2-143	2141-2150	pipelines	_	
2-144	2151-2152	a	_	
2-145	2153-2172	plus.Qualifications	_	
2-146	2172-2173	-	_	
2-147	2174-2181	Ability	_	
2-148	2182-2184	to	_	
2-149	2185-2192	express	_	
2-150	2193-2200	complex	_	
2-151	2201-2206	ideas	_	
2-152	2207-2210	and	_	
2-153	2211-2219	concepts	_	
2-154	2220-2228	verbally	_	
2-155	2229-2232	and	_	
2-156	2233-2235	in	_	
2-157	2236-2243	writing	_	
2-158	2244-2246	to	_	
2-159	2247-2248	a	_	
2-160	2249-2253	team	_	
2-161	2254-2256	of	_	
2-162	2257-2261	both	_	
2-163	2262-2271	technical	_	
2-164	2272-2275	and	_	
2-165	2276-2289	non-technical	_	
2-166	2290-2302	contributors	_	
2-167	2302-2303	.	_	
2-168	2303-2304	-	_	
2-169	2305-2311	Highly	_	
2-170	2312-2327	detail-oriented	_	
2-171	2328-2332	with	_	
2-172	2333-2339	strong	_	
2-173	2340-2350	analytical	_	
2-174	2351-2357	skills	_	
2-175	2357-2358	.	_	
2-176	2358-2359	-	_	
2-177	2360-2365	Works	_	
2-178	2366-2377	effectively	_	
2-179	2378-2382	with	_	
2-180	2383-2391	partners	_	
2-181	2392-2394	in	_	
2-182	2395-2404	different	_	
2-183	2405-2413	cultures	_	
2-184	2414-2417	and	_	
2-185	2418-2429	geographies	_	
2-186	2429-2430	.	_	
2-187	2430-2431	-	_	
2-188	2432-2441	Possesses	_	
2-189	2442-2443	a	_	
2-190	2444-2452	positive	_	
2-191	2453-2461	attitude	_	
2-192	2461-2462	,	_	
2-193	2463-2465	is	_	
2-194	2466-2480	self-motivated	Soft Skill	
2-195	2480-2481	,	_	
2-196	2482-2485	and	_	
2-197	2486-2488	is	_	
2-198	2489-2495	always	_	
2-199	2496-2504	learning	_	
2-200	2505-2514	something	_	
2-201	2515-2518	new	_	
2-202	2518-2519	.	_	
2-203	2519-2520	-	_	
2-204	2521-2526	Seeks	_	
2-205	2527-2536	solutions	_	
2-206	2537-2543	rather	_	
2-207	2544-2548	than	_	
2-208	2549-2554	blame	_	
2-209	2554-2555	,	_	
2-210	2556-2564	believes	_	
2-211	2565-2567	in	_	
2-212	2568-2575	success	_	
2-213	2576-2583	through	_	
2-214	2584-2592	teamwork	Soft Skill	
2-215	2592-2593	.	_	
2-216	2593-2594	-	_	
2-217	2595-2604	Exercises	_	
2-218	2605-2614	judgement	_	
2-219	2615-2621	within	_	
2-220	2622-2629	defined	_	
2-221	2630-2640	procedures	_	
2-222	2641-2644	and	_	
2-223	2645-2654	practices	_	
2-224	2655-2657	to	_	
2-225	2658-2667	determine	_	
2-226	2668-2679	appropriate	_	
2-227	2680-2686	action	_	
2-228	2687-2693	NodeJS	_	
2-229	2693-2694	/	_	
2-230	2694-2704	Typescript	Hard Skill	
2-231	2704-2705	,	_	
2-232	2706-2709	AWS	Hard Skill	
2-233	2710-2717	Elastic	_	
2-234	2718-2728	Kubernetes	Hard Skill	
2-235	2729-2736	Service	_	
2-236	2736-2737	,	_	
2-237	2738-2741	AWS	Hard Skill	
2-238	2742-2752	Relational	_	
2-239	2753-2761	Database	_	
2-240	2762-2769	Service	_	
2-241	2770-2771	7	_	
2-242	2771-2772	-	_	
2-243	2772-2774	10	_	
2-244	2775-2780	years	_	
2-245	2781-2783	of	_	
2-246	2784-2792	software	_	
2-247	2793-2804	development	_	
2-248	2805-2815	experience	_	
2-249	2816-2818	in	_	
2-250	2819-2820	a	_	
2-251	2821-2832	large-scale	_	
2-252	2833-2843	Production	_	
2-253	2844-2855	environment	_	
2-254	2856-2867	Experienced	_	
2-255	2868-2872	with	_	
2-256	2873-2881	multiple	_	
2-257	2882-2893	server-side	_	
2-258	2894-2903	languages	_	
2-259	2904-2913	including	_	
2-260	2914-2924	Typescript	Hard Skill	
2-261	2924-2925	,	_	
2-262	2926-2933	Node.JS	_	
2-263	2933-2934	,	_	
2-264	2935-2938	and	_	
2-265	2939-2945	Python	Hard Skill	
2-266	2946-2952	Strong	_	
2-267	2953-2960	working	_	
2-268	2961-2970	knowledge	_	
2-269	2971-2973	of	_	
2-270	2974-2981	popular	_	
2-271	2982-2989	backend	_	
2-272	2990-2999	libraries	_	
2-273	2999-3000	,	_	
2-274	3001-3005	such	_	
2-275	3006-3008	as	_	
2-276	3009-3016	Express	_	
2-277	3016-3017	,	_	
2-278	3018-3026	Mongoose	_	
2-279	3026-3027	,	_	
2-280	3028-3031	and	_	
2-281	3032-3037	Axios	_	
2-282	3038-3044	NestJS	_	
2-283	3045-3055	experience	_	
2-284	3056-3058	is	_	
2-285	3059-3060	a	_	
2-286	3061-3066	major	_	
2-287	3067-3071	plus	_	
2-288	3072-3083	Proficiency	_	
2-289	3084-3088	with	_	
2-290	3089-3100	traditional	_	
2-291	3101-3106	RDBMS	_	
2-292	3107-3109	as	_	
2-293	3110-3114	well	_	
2-294	3115-3117	as	_	
2-295	3118-3123	NoSQL	Hard Skill	
2-296	3124-3133	databases	_	
2-297	3134-3143	including	_	
2-298	3144-3151	MongoDB	Hard Skill	
2-299	3151-3152	/	_	
2-300	3152-3160	Document	_	
2-301	3161-3163	DB	_	
2-302	3163-3164	,	_	
2-303	3165-3173	Postgres	Hard Skill	
2-304	3173-3174	,	_	
2-305	3175-3183	DynamoDB	Hard Skill	
2-306	3183-3184	,	_	
2-307	3185-3188	and	_	
2-308	3189-3202	Elasticsearch	Hard Skill	
2-309	3203-3213	Experience	_	
2-310	3214-3221	working	_	
2-311	3222-3226	with	_	
2-312	3227-3230	AWS	Hard Skill	
2-313	3231-3239	Products	_	
2-314	3240-3244	like	_	
2-315	3245-3248	EKS	_	
2-316	3248-3249	,	_	
2-317	3250-3253	ECR	_	
2-318	3253-3254	,	_	
2-319	3255-3257	S3	_	
2-320	3257-3258	,	_	
2-321	3259-3262	RDS	_	
2-322	3262-3263	,	_	
2-323	3264-3267	IAM	_	
2-324	3267-3268	,	_	
2-325	3269-3272	VPC	_	
2-326	3273-3284	Proficiency	_	
2-327	3285-3289	with	_	
2-328	3290-3293	Git	Hard Skill	
2-329	3293-3294	,	_	
2-330	3295-3301	Docker	Hard Skill	
2-331	3301-3302	,	_	
2-332	3303-3313	Kubernetes	Hard Skill	
2-333	3314-3316	is	_	
2-334	3317-3318	a	_	
2-335	3319-3323	MUST	_	
2-336	3324-3330	Strong	_	
2-337	3331-3338	working	_	
2-338	3339-3348	knowledge	_	
2-339	3349-3351	of	_	
2-340	3352-3357	Linux	Hard Skill	
2-341	3358-3371	distributions	_	
2-342	3372-3375	and	_	
2-343	3376-3385	effective	_	
2-344	3386-3389	use	_	
2-345	3390-3392	of	_	
2-346	3393-3396	the	_	
2-347	3397-3404	command	_	
2-348	3405-3409	line	_	
2-349	3410-3416	Strong	_	
2-350	3417-3426	knowledge	_	
2-351	3427-3429	of	_	
2-352	3430-3438	security	_	
2-353	3439-3443	best	_	
2-354	3444-3453	practices	_	
2-355	3454-3460	Strong	_	
2-356	3461-3474	understanding	_	
2-357	3475-3477	of	_	
2-358	3478-3482	data	_	
2-359	3483-3493	structures	_	
2-360	3494-3497	and	_	
2-361	3498-3508	algorithms	_	
2-362	3509-3516	Ability	_	
2-363	3517-3519	to	_	
2-364	3520-3527	deliver	_	
2-365	3528-3531	and	_	
2-366	3532-3538	accept	_	
2-367	3539-3547	feedback	_	
2-368	3548-3550	on	_	
2-369	3551-3555	code	_	
2-370	3556-3559	and	_	
2-371	3560-3566	system	_	
2-372	3567-3573	design	Hard Skill	
2-373	3574-3580	Strong	_	
2-374	3581-3588	ability	_	
2-375	3589-3591	to	_	
2-376	3592-3597	debug	Hard Skill	
2-377	3598-3608	unfamiliar	_	
2-378	3609-3620	distributed	_	
2-379	3621-3634	architectures	_	
2-380	3635-3638	and	_	
2-381	3639-3646	isolate	_	
2-382	3647-3655	problems	_	
2-383	3656-3666	Experience	_	
2-384	3667-3674	working	_	
2-385	3675-3679	with	_	
2-386	3680-3682	ML	_	
2-387	3683-3689	models	_	
2-388	3690-3694	such	_	
2-389	3695-3697	as	_	
2-390	3698-3701	via	_	
2-391	3702-3705	AWS	Hard Skill	
2-392	3706-3717	Personalize	_	
2-393	3718-3719	a	_	
2-394	3720-3725	major	_	
2-395	3726-3730	plus	_	
2-396	3731-3738	Ability	_	
2-397	3739-3741	to	_	
2-398	3742-3749	express	_	
2-399	3750-3757	complex	_	
2-400	3758-3763	ideas	_	
2-401	3764-3767	and	_	
2-402	3768-3776	concepts	_	
2-403	3777-3785	verbally	_	
2-404	3786-3789	and	_	
2-405	3790-3792	in	_	
2-406	3793-3800	writing	_	
2-407	3801-3803	to	_	
2-408	3804-3805	a	_	
2-409	3806-3810	team	_	
2-410	3811-3813	of	_	
2-411	3814-3818	both	_	
2-412	3819-3828	technical	_	
2-413	3829-3832	and	_	
2-414	3833-3846	non-technical	_	
2-415	3847-3859	contributors	_	
2-416	3860-3866	Highly	_	
2-417	3867-3882	detail-oriented	_	
2-418	3883-3887	with	_	
2-419	3888-3894	strong	_	
2-420	3895-3905	analytical	_	
2-421	3906-3912	skills	_	
2-422	3913-3918	Works	_	
2-423	3919-3930	effectively	_	
2-424	3931-3935	with	_	
2-425	3936-3944	partners	_	
2-426	3945-3947	in	_	
2-427	3948-3957	different	_	
2-428	3958-3966	cultures	_	
2-429	3967-3970	and	_	
2-430	3971-3982	geographies	_	
2-431	3983-3992	Possesses	_	
2-432	3993-3994	a	_	
2-433	3995-4003	positive	_	
2-434	4004-4012	attitude	_	
2-435	4012-4013	,	_	
2-436	4014-4016	is	_	
2-437	4017-4031	self-motivated	Soft Skill	
2-438	4031-4032	,	_	
2-439	4033-4036	and	_	
2-440	4037-4039	is	_	
2-441	4040-4046	always	_	
2-442	4047-4055	learning	_	
2-443	4056-4065	something	_	
2-444	4066-4069	new	_	
2-445	4070-4075	Seeks	_	
2-446	4076-4085	solutions	_	
2-447	4086-4092	rather	_	
2-448	4093-4097	than	_	
2-449	4098-4103	blame	_	
2-450	4103-4104	,	_	
2-451	4105-4113	believes	_	
2-452	4114-4116	in	_	
2-453	4117-4124	success	_	
2-454	4125-4132	through	_	
2-455	4133-4141	teamwork	Soft Skill	
2-456	4142-4151	Exercises	_	
2-457	4152-4161	judgement	_	
2-458	4162-4168	within	_	
2-459	4169-4176	defined	_	
2-460	4177-4187	procedures	_	
2-461	4188-4191	and	_	
2-462	4192-4201	practices	_	
2-463	4202-4204	to	_	
2-464	4205-4214	determine	_	
2-465	4215-4226	appropriate	_	
2-466	4227-4233	action	_	
2-467	4234-4243	Implement	_	
2-468	4244-4252	back-end	_	
2-469	4253-4265	architecture	_	
2-470	4266-4276	components	_	
2-471	4276-4277	,	_	
2-472	4278-4283	tasks	_	
2-473	4283-4284	,	_	
2-474	4285-4288	and	_	
2-475	4289-4297	services	_	
2-476	4298-4300	to	_	
2-477	4301-4308	support	_	
2-478	4309-4317	Customer	_	
2-479	4318-4320	TV	_	
2-480	4321-4322	&	_	
2-481	4323-4329	Mobile	_	
2-482	4330-4340	businesses	_	
2-483	4341-4348	Conduct	_	
2-484	4349-4360	engineering	_	
2-485	4361-4371	activities	_	
2-486	4371-4372	,	_	
2-487	4373-4381	projects	_	
2-488	4381-4382	,	_	
2-489	4383-4391	research	_	
2-490	4392-4395	and	_	
2-491	4395-4396	/	_	
2-492	4396-4398	or	_	
2-493	4399-4410	operational	_	
2-494	4411-4416	tests	_	
2-495	4417-4419	in	_	
2-496	4420-4431	conformance	_	
2-497	4432-4434	to	_	
2-498	4435-4445	functional	_	
2-499	4446-4460	specifications	_	
2-500	4460-4461	,	_	
2-501	4462-4468	design	Hard Skill	
2-502	4469-4481	requirements	_	
2-503	4481-4482	,	_	
2-504	4483-4494	operational	_	
2-505	4495-4505	capacities	_	
2-506	4505-4506	,	_	
2-507	4507-4510	and	_	
2-508	4511-4519	customer	_	
2-509	4520-4531	performance	_	
2-510	4532-4544	expectations	_	
2-511	4545-4550	Debug	Hard Skill	
2-512	4551-4561	Production	_	
2-513	4562-4568	issues	_	
2-514	4569-4575	raised	_	
2-515	4576-4578	by	_	
2-516	4579-4588	customers	_	
2-517	4589-4592	and	_	
2-518	4593-4601	customer	_	
2-519	4602-4609	support	_	
2-520	4610-4615	teams	_	
2-521	4615-4616	,	_	
2-522	4617-4624	isolate	_	
2-523	4625-4628	the	_	
2-524	4629-4634	cause	_	
2-525	4635-4638	and	_	
2-526	4639-4643	work	_	
2-527	4644-4651	towards	_	
2-528	4652-4653	a	_	
2-529	4654-4657	fix	_	
2-530	4658-4669	Participate	_	
2-531	4670-4672	in	_	
2-532	4673-4681	meetings	_	
2-533	4682-4686	with	_	
2-534	4687-4692	other	_	
2-535	4693-4698	staff	_	
2-536	4699-4706	members	_	
2-537	4707-4709	to	_	
2-538	4710-4718	evaluate	_	
2-539	4718-4719	,	_	
2-540	4720-4724	plan	Soft Skill	
2-541	4724-4725	,	_	
2-542	4726-4729	and	_	
2-543	4730-4742	troubleshoot	_	
2-544	4742-4743	;	_	
2-545	4744-4747	and	_	
2-546	4748-4750	to	_	
2-547	4751-4757	ensure	_	
2-548	4758-4764	proper	_	
2-549	4765-4774	interface	_	
2-550	4775-4782	between	_	
2-551	4783-4791	software	_	
2-552	4791-4792	,	_	
2-553	4793-4800	systems	_	
2-554	4800-4801	,	_	
2-555	4802-4805	and	_	
2-556	4806-4817	operational	_	
2-557	4818-4829	performance	_	
2-558	4830-4838	Exercise	_	
2-559	4839-4847	judgment	_	
2-560	4848-4850	in	_	
2-561	4851-4860	selecting	_	
2-562	4861-4868	methods	_	
2-563	4868-4869	,	_	
2-564	4870-4880	techniques	_	
2-565	4880-4881	,	_	
2-566	4882-4885	and	_	
2-567	4886-4896	evaluation	_	
2-568	4897-4905	criteria	_	
2-569	4906-4909	for	_	
2-570	4910-4919	obtaining	_	
2-571	4920-4927	results	_	
2-572	4928-4937	Algorithm	_	
2-573	4938-4949	development	_	
2-574	4949-4950	,	_	
2-575	4951-4959	back-end	_	
2-576	4960-4970	automation	_	
2-577	4970-4971	,	_	
2-578	4972-4979	problem	_	
2-579	4980-4987	solving	_	
2-580	4988-4991	and	_	
2-581	4992-5003	scalability	_	
2-582	5004-5016	architecture	_	
2-583	5017-5023	Salary	_	
2-584	5023-5024	:	_	
2-585	5025-5033	$110,000	_	
2-586	5033-5034	-	_	
2-587	5034-5041	120,000	_	
2-588	5041-5042	/	_	
2-589	5042-5047	Annum	_	
2-590	5048-5052	with	_	
2-591	5053-5061	Benefits	_	
