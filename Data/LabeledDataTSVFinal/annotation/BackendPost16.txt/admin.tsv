#FORMAT=WebAnno TSV 3.3
#T_SP=custom.Span|label


#Text=Job Description100%remote...Job Title: Backend Developer - NodeJS DeveloperLocation: RemoteDuration: 12 Month11 years expWe are looking for a Backend developer responsible for maintaining and writing new backend services.
1-1	0-3	Job	_	
1-2	4-19	Description100%	_	
1-3	19-25	remote	_	
1-4	25-26	.	_	
1-5	26-27	.	_	
1-6	27-28	.	_	
1-7	28-31	Job	_	
1-8	32-37	Title	_	
1-9	37-38	:	_	
1-10	39-46	Backend	_	
1-11	47-56	Developer	_	
1-12	57-58	-	_	
1-13	59-65	NodeJS	_	
1-14	66-83	DeveloperLocation	_	
1-15	83-84	:	_	
1-16	85-99	RemoteDuration	_	
1-17	99-100	:	_	
1-18	101-103	12	_	
1-19	104-111	Month11	_	
1-20	112-117	years	_	
1-21	118-123	expWe	_	
1-22	124-127	are	_	
1-23	128-135	looking	_	
1-24	136-139	for	_	
1-25	140-141	a	_	
1-26	142-149	Backend	_	
1-27	150-159	developer	_	
1-28	160-171	responsible	_	
1-29	172-175	for	_	
1-30	176-187	maintaining	_	
1-31	188-191	and	_	
1-32	192-199	writing	_	
1-33	200-203	new	_	
1-34	204-211	backend	_	
1-35	212-220	services	_	
1-36	220-221	.	_	

#Text=Your primary focus will be the development of server-side logic and ensuring high performance and responsiveness to API requests from the frontend.You will also be responsible for integrating the frontend elements built by your co-workers into the application.
2-1	222-226	Your	_	
2-2	227-234	primary	_	
2-3	235-240	focus	_	
2-4	241-245	will	_	
2-5	246-248	be	_	
2-6	249-252	the	_	
2-7	253-264	development	_	
2-8	265-267	of	_	
2-9	268-279	server-side	_	
2-10	280-285	logic	_	
2-11	286-289	and	_	
2-12	290-298	ensuring	_	
2-13	299-303	high	_	
2-14	304-315	performance	_	
2-15	316-319	and	_	
2-16	320-334	responsiveness	_	
2-17	335-337	to	_	
2-18	338-341	API	Hard Skill	
2-19	342-350	requests	_	
2-20	351-355	from	_	
2-21	356-359	the	_	
2-22	360-372	frontend.You	_	
2-23	373-377	will	_	
2-24	378-382	also	_	
2-25	383-385	be	_	
2-26	386-397	responsible	_	
2-27	398-401	for	_	
2-28	402-413	integrating	_	
2-29	414-417	the	_	
2-30	418-426	frontend	_	
2-31	427-435	elements	_	
2-32	436-441	built	_	
2-33	442-444	by	_	
2-34	445-449	your	_	
2-35	450-460	co-workers	_	
2-36	461-465	into	_	
2-37	466-469	the	_	
2-38	470-481	application	_	
2-39	481-482	.	_	

#Text=Therefore, a basic understanding of frontend technologies is necessary as well.Responsibilities: Integration of user-facing elements developed by front-end developers with server-side logic Writing reusable, testable, and efficient code Design and implementation of low-latency, high-availability, and performant applicationsSkills: Strong proficiency with TypeScript and Node.js Understanding the nature of asynchronous programming and its quirks and workarounds 1-2 years of experience in AWS (Lambda) is must.
3-1	483-492	Therefore	_	
3-2	492-493	,	_	
3-3	494-495	a	_	
3-4	496-501	basic	_	
3-5	502-515	understanding	_	
3-6	516-518	of	_	
3-7	519-527	frontend	_	
3-8	528-540	technologies	_	
3-9	541-543	is	_	
3-10	544-553	necessary	_	
3-11	554-556	as	_	
3-12	557-578	well.Responsibilities	_	
3-13	578-579	:	_	
3-14	580-591	Integration	_	
3-15	592-594	of	_	
3-16	595-606	user-facing	_	
3-17	607-615	elements	_	
3-18	616-625	developed	_	
3-19	626-628	by	_	
3-20	629-638	front-end	_	
3-21	639-649	developers	_	
3-22	650-654	with	_	
3-23	655-666	server-side	_	
3-24	667-672	logic	_	
3-25	673-680	Writing	_	
3-26	681-689	reusable	_	
3-27	689-690	,	_	
3-28	691-699	testable	_	
3-29	699-700	,	_	
3-30	701-704	and	_	
3-31	705-714	efficient	_	
3-32	715-719	code	_	
3-33	720-726	Design	Hard Skill	
3-34	727-730	and	_	
3-35	731-745	implementation	Hard Skill	
3-36	746-748	of	_	
3-37	749-760	low-latency	_	
3-38	760-761	,	_	
3-39	762-779	high-availability	_	
3-40	779-780	,	_	
3-41	781-784	and	_	
3-42	785-795	performant	_	
3-43	796-814	applicationsSkills	_	
3-44	814-815	:	_	
3-45	816-822	Strong	_	
3-46	823-834	proficiency	_	
3-47	835-839	with	_	
3-48	840-850	TypeScript	Hard Skill	
3-49	851-854	and	_	
3-50	855-862	Node.js	Hard Skill	
3-51	863-876	Understanding	_	
3-52	877-880	the	_	
3-53	881-887	nature	_	
3-54	888-890	of	_	
3-55	891-903	asynchronous	_	
3-56	904-915	programming	Hard Skill	
3-57	916-919	and	_	
3-58	920-923	its	_	
3-59	924-930	quirks	_	
3-60	931-934	and	_	
3-61	935-946	workarounds	_	
3-62	947-948	1	_	
3-63	948-949	-	_	
3-64	949-950	2	_	
3-65	951-956	years	_	
3-66	957-959	of	_	
3-67	960-970	experience	_	
3-68	971-973	in	_	
3-69	974-977	AWS	Hard Skill	
3-70	978-979	(	_	
3-71	979-985	Lambda	_	
3-72	985-986	)	_	
3-73	987-989	is	_	
3-74	990-994	must	_	
3-75	994-995	.	_	

#Text=Understanding of SQL and databases Some understanding of front-end technologies, such as HTML5, and CSS3.
4-1	996-1009	Understanding	_	
4-2	1010-1012	of	_	
4-3	1013-1016	SQL	Hard Skill	
4-4	1017-1020	and	_	
4-5	1021-1030	databases	_	
4-6	1031-1035	Some	_	
4-7	1036-1049	understanding	_	
4-8	1050-1052	of	_	
4-9	1053-1062	front-end	_	
4-10	1063-1075	technologies	_	
4-11	1075-1076	,	_	
4-12	1077-1081	such	_	
4-13	1082-1084	as	_	
4-14	1085-1090	HTML5	Hard Skill	
4-15	1090-1091	,	_	
4-16	1092-1095	and	_	
4-17	1096-1100	CSS3	_	
4-18	1100-1101	.	_	

#Text=Understanding of React is a strong plus Understanding fundamental design principles behind a scalable application Proficient understanding of code versioning tools, such as GitReport this job Dice Id: 91095471 Position Id: 5566405 Therefore, a basic understanding of frontend technologies is necessary as well Strong proficiency with TypeScript and Node.js Understanding the nature of asynchronous programming and its quirks and workarounds 1-2 years of experience in AWS (Lambda) is must Understanding of SQL and databases Some understanding of front-end technologies, such as HTML5, and CSS3 Understanding of React is a strong plus Understanding fundamental design principles behind a scalable application Proficient understanding of code versioning tools, such as Git Your primary focus will be the development of server-side logic and ensuring high performance and responsiveness to API requests from the frontend You will also be responsible for integrating the frontend elements built by your co-workers into the application Integration of user-facing elements developed by front-end developers with server-side logic Writing reusable, testable, and efficient code Design and implementation of low-latency, high-availability, and performant applications
5-1	1102-1115	Understanding	_	
5-2	1116-1118	of	_	
5-3	1119-1124	React	Hard Skill	
5-4	1125-1127	is	_	
5-5	1128-1129	a	_	
5-6	1130-1136	strong	_	
5-7	1137-1141	plus	_	
5-8	1142-1155	Understanding	_	
5-9	1156-1167	fundamental	_	
5-10	1168-1174	design	Hard Skill	
5-11	1175-1185	principles	_	
5-12	1186-1192	behind	_	
5-13	1193-1194	a	_	
5-14	1195-1203	scalable	_	
5-15	1204-1215	application	_	
5-16	1216-1226	Proficient	_	
5-17	1227-1240	understanding	_	
5-18	1241-1243	of	_	
5-19	1244-1248	code	_	
5-20	1249-1259	versioning	_	
5-21	1260-1265	tools	_	
5-22	1265-1266	,	_	
5-23	1267-1271	such	_	
5-24	1272-1274	as	_	
5-25	1275-1284	GitReport	_	
5-26	1285-1289	this	_	
5-27	1290-1293	job	_	
5-28	1294-1298	Dice	_	
5-29	1299-1301	Id	_	
5-30	1301-1302	:	_	
5-31	1303-1311	91095471	_	
5-32	1312-1320	Position	_	
5-33	1321-1323	Id	_	
5-34	1323-1324	:	_	
5-35	1325-1332	5566405	_	
5-36	1333-1342	Therefore	_	
5-37	1342-1343	,	_	
5-38	1344-1345	a	_	
5-39	1346-1351	basic	_	
5-40	1352-1365	understanding	_	
5-41	1366-1368	of	_	
5-42	1369-1377	frontend	_	
5-43	1378-1390	technologies	_	
5-44	1391-1393	is	_	
5-45	1394-1403	necessary	_	
5-46	1404-1406	as	_	
5-47	1407-1411	well	_	
5-48	1412-1418	Strong	_	
5-49	1419-1430	proficiency	_	
5-50	1431-1435	with	_	
5-51	1436-1446	TypeScript	Hard Skill	
5-52	1447-1450	and	_	
5-53	1451-1458	Node.js	Hard Skill	
5-54	1459-1472	Understanding	_	
5-55	1473-1476	the	_	
5-56	1477-1483	nature	_	
5-57	1484-1486	of	_	
5-58	1487-1499	asynchronous	_	
5-59	1500-1511	programming	Hard Skill	
5-60	1512-1515	and	_	
5-61	1516-1519	its	_	
5-62	1520-1526	quirks	_	
5-63	1527-1530	and	_	
5-64	1531-1542	workarounds	_	
5-65	1543-1544	1	_	
5-66	1544-1545	-	_	
5-67	1545-1546	2	_	
5-68	1547-1552	years	_	
5-69	1553-1555	of	_	
5-70	1556-1566	experience	_	
5-71	1567-1569	in	_	
5-72	1570-1573	AWS	Hard Skill	
5-73	1574-1575	(	_	
5-74	1575-1581	Lambda	_	
5-75	1581-1582	)	_	
5-76	1583-1585	is	_	
5-77	1586-1590	must	_	
5-78	1591-1604	Understanding	_	
5-79	1605-1607	of	_	
5-80	1608-1611	SQL	Hard Skill	
5-81	1612-1615	and	_	
5-82	1616-1625	databases	_	
5-83	1626-1630	Some	_	
5-84	1631-1644	understanding	_	
5-85	1645-1647	of	_	
5-86	1648-1657	front-end	_	
5-87	1658-1670	technologies	_	
5-88	1670-1671	,	_	
5-89	1672-1676	such	_	
5-90	1677-1679	as	_	
5-91	1680-1685	HTML5	Hard Skill	
5-92	1685-1686	,	_	
5-93	1687-1690	and	_	
5-94	1691-1695	CSS3	_	
5-95	1696-1709	Understanding	_	
5-96	1710-1712	of	_	
5-97	1713-1718	React	Hard Skill	
5-98	1719-1721	is	_	
5-99	1722-1723	a	_	
5-100	1724-1730	strong	_	
5-101	1731-1735	plus	_	
5-102	1736-1749	Understanding	_	
5-103	1750-1761	fundamental	_	
5-104	1762-1768	design	Hard Skill	
5-105	1769-1779	principles	_	
5-106	1780-1786	behind	_	
5-107	1787-1788	a	_	
5-108	1789-1797	scalable	_	
5-109	1798-1809	application	_	
5-110	1810-1820	Proficient	_	
5-111	1821-1834	understanding	_	
5-112	1835-1837	of	_	
5-113	1838-1842	code	_	
5-114	1843-1853	versioning	_	
5-115	1854-1859	tools	_	
5-116	1859-1860	,	_	
5-117	1861-1865	such	_	
5-118	1866-1868	as	_	
5-119	1869-1872	Git	Hard Skill	
5-120	1873-1877	Your	_	
5-121	1878-1885	primary	_	
5-122	1886-1891	focus	_	
5-123	1892-1896	will	_	
5-124	1897-1899	be	_	
5-125	1900-1903	the	_	
5-126	1904-1915	development	_	
5-127	1916-1918	of	_	
5-128	1919-1930	server-side	_	
5-129	1931-1936	logic	_	
5-130	1937-1940	and	_	
5-131	1941-1949	ensuring	_	
5-132	1950-1954	high	_	
5-133	1955-1966	performance	_	
5-134	1967-1970	and	_	
5-135	1971-1985	responsiveness	_	
5-136	1986-1988	to	_	
5-137	1989-1992	API	Hard Skill	
5-138	1993-2001	requests	_	
5-139	2002-2006	from	_	
5-140	2007-2010	the	_	
5-141	2011-2019	frontend	_	
5-142	2020-2023	You	_	
5-143	2024-2028	will	_	
5-144	2029-2033	also	_	
5-145	2034-2036	be	_	
5-146	2037-2048	responsible	_	
5-147	2049-2052	for	_	
5-148	2053-2064	integrating	_	
5-149	2065-2068	the	_	
5-150	2069-2077	frontend	_	
5-151	2078-2086	elements	_	
5-152	2087-2092	built	_	
5-153	2093-2095	by	_	
5-154	2096-2100	your	_	
5-155	2101-2111	co-workers	_	
5-156	2112-2116	into	_	
5-157	2117-2120	the	_	
5-158	2121-2132	application	_	
5-159	2133-2144	Integration	_	
5-160	2145-2147	of	_	
5-161	2148-2159	user-facing	_	
5-162	2160-2168	elements	_	
5-163	2169-2178	developed	_	
5-164	2179-2181	by	_	
5-165	2182-2191	front-end	_	
5-166	2192-2202	developers	_	
5-167	2203-2207	with	_	
5-168	2208-2219	server-side	_	
5-169	2220-2225	logic	_	
5-170	2226-2233	Writing	_	
5-171	2234-2242	reusable	_	
5-172	2242-2243	,	_	
5-173	2244-2252	testable	_	
5-174	2252-2253	,	_	
5-175	2254-2257	and	_	
5-176	2258-2267	efficient	_	
5-177	2268-2272	code	_	
5-178	2273-2279	Design	Hard Skill	
5-179	2280-2283	and	_	
5-180	2284-2298	implementation	Hard Skill	
5-181	2299-2301	of	_	
5-182	2302-2313	low-latency	_	
5-183	2313-2314	,	_	
5-184	2315-2332	high-availability	_	
5-185	2332-2333	,	_	
5-186	2334-2337	and	_	
5-187	2338-2348	performant	_	
5-188	2349-2361	applications	_	
