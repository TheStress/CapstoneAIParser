#FORMAT=WebAnno TSV 3.3


#Text=FRONT-END ENGINEERWe are looking for a Front-End Developer responsible for the client side of our service.
1-1	0-9	FRONT-END	
1-2	10-20	ENGINEERWe	
1-3	21-24	are	
1-4	25-32	looking	
1-5	33-36	for	
1-6	37-38	a	
1-7	39-48	Front-End	
1-8	49-58	Developer	
1-9	59-70	responsible	
1-10	71-74	for	
1-11	75-78	the	
1-12	79-85	client	
1-13	86-90	side	
1-14	91-93	of	
1-15	94-97	our	
1-16	98-105	service	
1-17	105-106	.	

#Text=Your primary focus will be to implement a complete user interface in the form of a responsive mobile and desktop web app, with a focus on performance.
2-1	107-111	Your	
2-2	112-119	primary	
2-3	120-125	focus	
2-4	126-130	will	
2-5	131-133	be	
2-6	134-136	to	
2-7	137-146	implement	
2-8	147-148	a	
2-9	149-157	complete	
2-10	158-162	user	
2-11	163-172	interface	
2-12	173-175	in	
2-13	176-179	the	
2-14	180-184	form	
2-15	185-187	of	
2-16	188-189	a	
2-17	190-200	responsive	
2-18	201-207	mobile	
2-19	208-211	and	
2-20	212-219	desktop	
2-21	220-223	web	
2-22	224-227	app	
2-23	227-228	,	
2-24	229-233	with	
2-25	234-235	a	
2-26	236-241	focus	
2-27	242-244	on	
2-28	245-256	performance	
2-29	256-257	.	

#Text=Your main duties will include creating modules and components and coupling them together into a functional Angular 2 application.
3-1	258-262	Your	
3-2	263-267	main	
3-3	268-274	duties	
3-4	275-279	will	
3-5	280-287	include	
3-6	288-296	creating	
3-7	297-304	modules	
3-8	305-308	and	
3-9	309-319	components	
3-10	320-323	and	
3-11	324-332	coupling	
3-12	333-337	them	
3-13	338-346	together	
3-14	347-351	into	
3-15	352-353	a	
3-16	354-364	functional	
3-17	365-372	Angular	
3-18	373-374	2	
3-19	375-386	application	
3-20	386-387	.	

#Text=The... artistic design and functional specifications will be delivered to you; it is your responsibility to implement the design and animations using SASS, TypeScript, and HTML5.
4-1	388-391	The	
4-2	391-392	.	
4-3	392-393	.	
4-4	393-394	.	
4-5	395-403	artistic	
4-6	404-410	design	
4-7	411-414	and	
4-8	415-425	functional	
4-9	426-440	specifications	
4-10	441-445	will	
4-11	446-448	be	
4-12	449-458	delivered	
4-13	459-461	to	
4-14	462-465	you	
4-15	465-466	;	
4-16	467-469	it	
4-17	470-472	is	
4-18	473-477	your	
4-19	478-492	responsibility	
4-20	493-495	to	
4-21	496-505	implement	
4-22	506-509	the	
4-23	510-516	design	
4-24	517-520	and	
4-25	521-531	animations	
4-26	532-537	using	
4-27	538-542	SASS	
4-28	542-543	,	
4-29	544-554	TypeScript	
4-30	554-555	,	
4-31	556-559	and	
4-32	560-565	HTML5	
4-33	565-566	.	

#Text=You will work in a team with the back-end developer, and communicate with the API using standard methods.
5-1	567-570	You	
5-2	571-575	will	
5-3	576-580	work	
5-4	581-583	in	
5-5	584-585	a	
5-6	586-590	team	
5-7	591-595	with	
5-8	596-599	the	
5-9	600-608	back-end	
5-10	609-618	developer	
5-11	618-619	,	
5-12	620-623	and	
5-13	624-635	communicate	
5-14	636-640	with	
5-15	641-644	the	
5-16	645-648	API	
5-17	649-654	using	
5-18	655-663	standard	
5-19	664-671	methods	
5-20	671-672	.	

#Text=A thorough understanding of all of the components of our platform and infrastructure is required.RESPONSIBILITIES: Delivering a complete front end application Ensuring high performance on mobile and desktop Writing tested, idiomatic, and documented TypeScript, HTML and SASS Coordinating the workflow with the design and QA teams Cooperating with the back-end developer in the process of building the RESTful APIQUALIFICATIONS: Professional, precise communication skills Deep knowledge of Angular 2 practices and commonly used modules Creating self-contained, reusable, and testable modules and components Ability to provide SEO solutions for single page apps Ability to implement accessible applications that can be used seamlessly in a screen reader or other accessible device Extensive knowledge of CSS and JS methods for providing performant visual effects and keeping the framerate above 30fps at all times Thorough understanding of the responsibilities of the platform, database, API, caching layer, proxies, and other web services used in the system Validating user actions on the client side and providing responsive feedback Writing non-blocking code, and resorting to advanced techniques such as multi-threading, when needed Creating custom, general use modules and components which extend the elements and modules of core Angular Experience with building the infrastructure for serving the front-end app and assets on a CDN Architecting and automating the build process for production, using task runners or scripts in Gulp or Webpack Documenting the code inline using JSDoc or other conventions Writing extensive unit tests using automated TDD tasks Creating e2e test suites for all components, and running them with Protractor (or a well reasoned alternative) Creating configuration, build, and test scripts for Continuous Integration environments Experience with mobile frameworks such as Cordova for creating HTML/JS based mobile applications Proficient understanding of code versioning tools such as Git Professional, precise communication skills Deep knowledge of Angular 2 practices and commonly used modules Creating self-contained, reusable, and testable modules and components Ability to provide SEO solutions for single page apps Ability to implement accessible applications that can be used seamlessly in a screen reader or other accessible device Extensive knowledge of CSS and JS methods for providing performant visual effects and keeping the framerate above 30fps at all times Thorough understanding of the responsibilities of the platform, database, API, caching layer, proxies, and other web services used in the system Creating custom, general use modules and components which extend the elements and modules of core Angular Experience with building the infrastructure for serving the front-end app and assets on a CDN Architecting and automating the build process for production, using task runners or scripts in Gulp or Webpack Documenting the code inline using JSDoc or other conventions Writing extensive unit tests using automated TDD tasks Creating e2e test suites for all components, and running them with Protractor (or a well reasoned alternative) Creating configuration, build, and test scripts for Continuous Integration environments Experience with mobile frameworks such as Cordova for creating HTML/JS based mobile applications Proficient understanding of code versioning tools such as Git Your primary focus will be to implement a complete user interface in the form of a responsive mobile and desktop web app, with a focus on performance Your main duties will include creating modules and components and coupling them together into a functional Angular 2 application The artistic design and functional specifications will be delivered to you; it is your responsibility to implement the design and animations using SASS, TypeScript, and HTML5 You will work in a team with the back-end developer, and communicate with the API using standard methods Delivering a complete front end application Ensuring high performance on mobile and desktop Writing tested, idiomatic, and documented TypeScript, HTML and SASS Coordinating the workflow with the design and QA teams Cooperating with the back-end developer in the process of building the RESTful API
6-1	673-674	A	
6-2	675-683	thorough	
6-3	684-697	understanding	
6-4	698-700	of	
6-5	701-704	all	
6-6	705-707	of	
6-7	708-711	the	
6-8	712-722	components	
6-9	723-725	of	
6-10	726-729	our	
6-11	730-738	platform	
6-12	739-742	and	
6-13	743-757	infrastructure	
6-14	758-760	is	
6-15	761-786	required.RESPONSIBILITIES	
6-16	786-787	:	
6-17	788-798	Delivering	
6-18	799-800	a	
6-19	801-809	complete	
6-20	810-815	front	
6-21	816-819	end	
6-22	820-831	application	
6-23	832-840	Ensuring	
6-24	841-845	high	
6-25	846-857	performance	
6-26	858-860	on	
6-27	861-867	mobile	
6-28	868-871	and	
6-29	872-879	desktop	
6-30	880-887	Writing	
6-31	888-894	tested	
6-32	894-895	,	
6-33	896-905	idiomatic	
6-34	905-906	,	
6-35	907-910	and	
6-36	911-921	documented	
6-37	922-932	TypeScript	
6-38	932-933	,	
6-39	934-938	HTML	
6-40	939-942	and	
6-41	943-947	SASS	
6-42	948-960	Coordinating	
6-43	961-964	the	
6-44	965-973	workflow	
6-45	974-978	with	
6-46	979-982	the	
6-47	983-989	design	
6-48	990-993	and	
6-49	994-996	QA	
6-50	997-1002	teams	
6-51	1003-1014	Cooperating	
6-52	1015-1019	with	
6-53	1020-1023	the	
6-54	1024-1032	back-end	
6-55	1033-1042	developer	
6-56	1043-1045	in	
6-57	1046-1049	the	
6-58	1050-1057	process	
6-59	1058-1060	of	
6-60	1061-1069	building	
6-61	1070-1073	the	
6-62	1074-1081	RESTful	
6-63	1082-1099	APIQUALIFICATIONS	
6-64	1099-1100	:	
6-65	1101-1113	Professional	
6-66	1113-1114	,	
6-67	1115-1122	precise	
6-68	1123-1136	communication	
6-69	1137-1143	skills	
6-70	1144-1148	Deep	
6-71	1149-1158	knowledge	
6-72	1159-1161	of	
6-73	1162-1169	Angular	
6-74	1170-1171	2	
6-75	1172-1181	practices	
6-76	1182-1185	and	
6-77	1186-1194	commonly	
6-78	1195-1199	used	
6-79	1200-1207	modules	
6-80	1208-1216	Creating	
6-81	1217-1231	self-contained	
6-82	1231-1232	,	
6-83	1233-1241	reusable	
6-84	1241-1242	,	
6-85	1243-1246	and	
6-86	1247-1255	testable	
6-87	1256-1263	modules	
6-88	1264-1267	and	
6-89	1268-1278	components	
6-90	1279-1286	Ability	
6-91	1287-1289	to	
6-92	1290-1297	provide	
6-93	1298-1301	SEO	
6-94	1302-1311	solutions	
6-95	1312-1315	for	
6-96	1316-1322	single	
6-97	1323-1327	page	
6-98	1328-1332	apps	
6-99	1333-1340	Ability	
6-100	1341-1343	to	
6-101	1344-1353	implement	
6-102	1354-1364	accessible	
6-103	1365-1377	applications	
6-104	1378-1382	that	
6-105	1383-1386	can	
6-106	1387-1389	be	
6-107	1390-1394	used	
6-108	1395-1405	seamlessly	
6-109	1406-1408	in	
6-110	1409-1410	a	
6-111	1411-1417	screen	
6-112	1418-1424	reader	
6-113	1425-1427	or	
6-114	1428-1433	other	
6-115	1434-1444	accessible	
6-116	1445-1451	device	
6-117	1452-1461	Extensive	
6-118	1462-1471	knowledge	
6-119	1472-1474	of	
6-120	1475-1478	CSS	
6-121	1479-1482	and	
6-122	1483-1485	JS	
6-123	1486-1493	methods	
6-124	1494-1497	for	
6-125	1498-1507	providing	
6-126	1508-1518	performant	
6-127	1519-1525	visual	
6-128	1526-1533	effects	
6-129	1534-1537	and	
6-130	1538-1545	keeping	
6-131	1546-1549	the	
6-132	1550-1559	framerate	
6-133	1560-1565	above	
6-134	1566-1571	30fps	
6-135	1572-1574	at	
6-136	1575-1578	all	
6-137	1579-1584	times	
6-138	1585-1593	Thorough	
6-139	1594-1607	understanding	
6-140	1608-1610	of	
6-141	1611-1614	the	
6-142	1615-1631	responsibilities	
6-143	1632-1634	of	
6-144	1635-1638	the	
6-145	1639-1647	platform	
6-146	1647-1648	,	
6-147	1649-1657	database	
6-148	1657-1658	,	
6-149	1659-1662	API	
6-150	1662-1663	,	
6-151	1664-1671	caching	
6-152	1672-1677	layer	
6-153	1677-1678	,	
6-154	1679-1686	proxies	
6-155	1686-1687	,	
6-156	1688-1691	and	
6-157	1692-1697	other	
6-158	1698-1701	web	
6-159	1702-1710	services	
6-160	1711-1715	used	
6-161	1716-1718	in	
6-162	1719-1722	the	
6-163	1723-1729	system	
6-164	1730-1740	Validating	
6-165	1741-1745	user	
6-166	1746-1753	actions	
6-167	1754-1756	on	
6-168	1757-1760	the	
6-169	1761-1767	client	
6-170	1768-1772	side	
6-171	1773-1776	and	
6-172	1777-1786	providing	
6-173	1787-1797	responsive	
6-174	1798-1806	feedback	
6-175	1807-1814	Writing	
6-176	1815-1827	non-blocking	
6-177	1828-1832	code	
6-178	1832-1833	,	
6-179	1834-1837	and	
6-180	1838-1847	resorting	
6-181	1848-1850	to	
6-182	1851-1859	advanced	
6-183	1860-1870	techniques	
6-184	1871-1875	such	
6-185	1876-1878	as	
6-186	1879-1894	multi-threading	
6-187	1894-1895	,	
6-188	1896-1900	when	
6-189	1901-1907	needed	
6-190	1908-1916	Creating	
6-191	1917-1923	custom	
6-192	1923-1924	,	
6-193	1925-1932	general	
6-194	1933-1936	use	
6-195	1937-1944	modules	
6-196	1945-1948	and	
6-197	1949-1959	components	
6-198	1960-1965	which	
6-199	1966-1972	extend	
6-200	1973-1976	the	
6-201	1977-1985	elements	
6-202	1986-1989	and	
6-203	1990-1997	modules	
6-204	1998-2000	of	
6-205	2001-2005	core	
6-206	2006-2013	Angular	
6-207	2014-2024	Experience	
6-208	2025-2029	with	
6-209	2030-2038	building	
6-210	2039-2042	the	
6-211	2043-2057	infrastructure	
6-212	2058-2061	for	
6-213	2062-2069	serving	
6-214	2070-2073	the	
6-215	2074-2083	front-end	
6-216	2084-2087	app	
6-217	2088-2091	and	
6-218	2092-2098	assets	
6-219	2099-2101	on	
6-220	2102-2103	a	
6-221	2104-2107	CDN	
6-222	2108-2120	Architecting	
6-223	2121-2124	and	
6-224	2125-2135	automating	
6-225	2136-2139	the	
6-226	2140-2145	build	
6-227	2146-2153	process	
6-228	2154-2157	for	
6-229	2158-2168	production	
6-230	2168-2169	,	
6-231	2170-2175	using	
6-232	2176-2180	task	
6-233	2181-2188	runners	
6-234	2189-2191	or	
6-235	2192-2199	scripts	
6-236	2200-2202	in	
6-237	2203-2207	Gulp	
6-238	2208-2210	or	
6-239	2211-2218	Webpack	
6-240	2219-2230	Documenting	
6-241	2231-2234	the	
6-242	2235-2239	code	
6-243	2240-2246	inline	
6-244	2247-2252	using	
6-245	2253-2258	JSDoc	
6-246	2259-2261	or	
6-247	2262-2267	other	
6-248	2268-2279	conventions	
6-249	2280-2287	Writing	
6-250	2288-2297	extensive	
6-251	2298-2302	unit	
6-252	2303-2308	tests	
6-253	2309-2314	using	
6-254	2315-2324	automated	
6-255	2325-2328	TDD	
6-256	2329-2334	tasks	
6-257	2335-2343	Creating	
6-258	2344-2347	e2e	
6-259	2348-2352	test	
6-260	2353-2359	suites	
6-261	2360-2363	for	
6-262	2364-2367	all	
6-263	2368-2378	components	
6-264	2378-2379	,	
6-265	2380-2383	and	
6-266	2384-2391	running	
6-267	2392-2396	them	
6-268	2397-2401	with	
6-269	2402-2412	Protractor	
6-270	2413-2414	(	
6-271	2414-2416	or	
6-272	2417-2418	a	
6-273	2419-2423	well	
6-274	2424-2432	reasoned	
6-275	2433-2444	alternative	
6-276	2444-2445	)	
6-277	2446-2454	Creating	
6-278	2455-2468	configuration	
6-279	2468-2469	,	
6-280	2470-2475	build	
6-281	2475-2476	,	
6-282	2477-2480	and	
6-283	2481-2485	test	
6-284	2486-2493	scripts	
6-285	2494-2497	for	
6-286	2498-2508	Continuous	
6-287	2509-2520	Integration	
6-288	2521-2533	environments	
6-289	2534-2544	Experience	
6-290	2545-2549	with	
6-291	2550-2556	mobile	
6-292	2557-2567	frameworks	
6-293	2568-2572	such	
6-294	2573-2575	as	
6-295	2576-2583	Cordova	
6-296	2584-2587	for	
6-297	2588-2596	creating	
6-298	2597-2601	HTML	
6-299	2601-2602	/	
6-300	2602-2604	JS	
6-301	2605-2610	based	
6-302	2611-2617	mobile	
6-303	2618-2630	applications	
6-304	2631-2641	Proficient	
6-305	2642-2655	understanding	
6-306	2656-2658	of	
6-307	2659-2663	code	
6-308	2664-2674	versioning	
6-309	2675-2680	tools	
6-310	2681-2685	such	
6-311	2686-2688	as	
6-312	2689-2692	Git	
6-313	2693-2705	Professional	
6-314	2705-2706	,	
6-315	2707-2714	precise	
6-316	2715-2728	communication	
6-317	2729-2735	skills	
6-318	2736-2740	Deep	
6-319	2741-2750	knowledge	
6-320	2751-2753	of	
6-321	2754-2761	Angular	
6-322	2762-2763	2	
6-323	2764-2773	practices	
6-324	2774-2777	and	
6-325	2778-2786	commonly	
6-326	2787-2791	used	
6-327	2792-2799	modules	
6-328	2800-2808	Creating	
6-329	2809-2823	self-contained	
6-330	2823-2824	,	
6-331	2825-2833	reusable	
6-332	2833-2834	,	
6-333	2835-2838	and	
6-334	2839-2847	testable	
6-335	2848-2855	modules	
6-336	2856-2859	and	
6-337	2860-2870	components	
6-338	2871-2878	Ability	
6-339	2879-2881	to	
6-340	2882-2889	provide	
6-341	2890-2893	SEO	
6-342	2894-2903	solutions	
6-343	2904-2907	for	
6-344	2908-2914	single	
6-345	2915-2919	page	
6-346	2920-2924	apps	
6-347	2925-2932	Ability	
6-348	2933-2935	to	
6-349	2936-2945	implement	
6-350	2946-2956	accessible	
6-351	2957-2969	applications	
6-352	2970-2974	that	
6-353	2975-2978	can	
6-354	2979-2981	be	
6-355	2982-2986	used	
6-356	2987-2997	seamlessly	
6-357	2998-3000	in	
6-358	3001-3002	a	
6-359	3003-3009	screen	
6-360	3010-3016	reader	
6-361	3017-3019	or	
6-362	3020-3025	other	
6-363	3026-3036	accessible	
6-364	3037-3043	device	
6-365	3044-3053	Extensive	
6-366	3054-3063	knowledge	
6-367	3064-3066	of	
6-368	3067-3070	CSS	
6-369	3071-3074	and	
6-370	3075-3077	JS	
6-371	3078-3085	methods	
6-372	3086-3089	for	
6-373	3090-3099	providing	
6-374	3100-3110	performant	
6-375	3111-3117	visual	
6-376	3118-3125	effects	
6-377	3126-3129	and	
6-378	3130-3137	keeping	
6-379	3138-3141	the	
6-380	3142-3151	framerate	
6-381	3152-3157	above	
6-382	3158-3163	30fps	
6-383	3164-3166	at	
6-384	3167-3170	all	
6-385	3171-3176	times	
6-386	3177-3185	Thorough	
6-387	3186-3199	understanding	
6-388	3200-3202	of	
6-389	3203-3206	the	
6-390	3207-3223	responsibilities	
6-391	3224-3226	of	
6-392	3227-3230	the	
6-393	3231-3239	platform	
6-394	3239-3240	,	
6-395	3241-3249	database	
6-396	3249-3250	,	
6-397	3251-3254	API	
6-398	3254-3255	,	
6-399	3256-3263	caching	
6-400	3264-3269	layer	
6-401	3269-3270	,	
6-402	3271-3278	proxies	
6-403	3278-3279	,	
6-404	3280-3283	and	
6-405	3284-3289	other	
6-406	3290-3293	web	
6-407	3294-3302	services	
6-408	3303-3307	used	
6-409	3308-3310	in	
6-410	3311-3314	the	
6-411	3315-3321	system	
6-412	3322-3330	Creating	
6-413	3331-3337	custom	
6-414	3337-3338	,	
6-415	3339-3346	general	
6-416	3347-3350	use	
6-417	3351-3358	modules	
6-418	3359-3362	and	
6-419	3363-3373	components	
6-420	3374-3379	which	
6-421	3380-3386	extend	
6-422	3387-3390	the	
6-423	3391-3399	elements	
6-424	3400-3403	and	
6-425	3404-3411	modules	
6-426	3412-3414	of	
6-427	3415-3419	core	
6-428	3420-3427	Angular	
6-429	3428-3438	Experience	
6-430	3439-3443	with	
6-431	3444-3452	building	
6-432	3453-3456	the	
6-433	3457-3471	infrastructure	
6-434	3472-3475	for	
6-435	3476-3483	serving	
6-436	3484-3487	the	
6-437	3488-3497	front-end	
6-438	3498-3501	app	
6-439	3502-3505	and	
6-440	3506-3512	assets	
6-441	3513-3515	on	
6-442	3516-3517	a	
6-443	3518-3521	CDN	
6-444	3522-3534	Architecting	
6-445	3535-3538	and	
6-446	3539-3549	automating	
6-447	3550-3553	the	
6-448	3554-3559	build	
6-449	3560-3567	process	
6-450	3568-3571	for	
6-451	3572-3582	production	
6-452	3582-3583	,	
6-453	3584-3589	using	
6-454	3590-3594	task	
6-455	3595-3602	runners	
6-456	3603-3605	or	
6-457	3606-3613	scripts	
6-458	3614-3616	in	
6-459	3617-3621	Gulp	
6-460	3622-3624	or	
6-461	3625-3632	Webpack	
6-462	3633-3644	Documenting	
6-463	3645-3648	the	
6-464	3649-3653	code	
6-465	3654-3660	inline	
6-466	3661-3666	using	
6-467	3667-3672	JSDoc	
6-468	3673-3675	or	
6-469	3676-3681	other	
6-470	3682-3693	conventions	
6-471	3694-3701	Writing	
6-472	3702-3711	extensive	
6-473	3712-3716	unit	
6-474	3717-3722	tests	
6-475	3723-3728	using	
6-476	3729-3738	automated	
6-477	3739-3742	TDD	
6-478	3743-3748	tasks	
6-479	3749-3757	Creating	
6-480	3758-3761	e2e	
6-481	3762-3766	test	
6-482	3767-3773	suites	
6-483	3774-3777	for	
6-484	3778-3781	all	
6-485	3782-3792	components	
6-486	3792-3793	,	
6-487	3794-3797	and	
6-488	3798-3805	running	
6-489	3806-3810	them	
6-490	3811-3815	with	
6-491	3816-3826	Protractor	
6-492	3827-3828	(	
6-493	3828-3830	or	
6-494	3831-3832	a	
6-495	3833-3837	well	
6-496	3838-3846	reasoned	
6-497	3847-3858	alternative	
6-498	3858-3859	)	
6-499	3860-3868	Creating	
6-500	3869-3882	configuration	
6-501	3882-3883	,	
6-502	3884-3889	build	
6-503	3889-3890	,	
6-504	3891-3894	and	
6-505	3895-3899	test	
6-506	3900-3907	scripts	
6-507	3908-3911	for	
6-508	3912-3922	Continuous	
6-509	3923-3934	Integration	
6-510	3935-3947	environments	
6-511	3948-3958	Experience	
6-512	3959-3963	with	
6-513	3964-3970	mobile	
6-514	3971-3981	frameworks	
6-515	3982-3986	such	
6-516	3987-3989	as	
6-517	3990-3997	Cordova	
6-518	3998-4001	for	
6-519	4002-4010	creating	
6-520	4011-4015	HTML	
6-521	4015-4016	/	
6-522	4016-4018	JS	
6-523	4019-4024	based	
6-524	4025-4031	mobile	
6-525	4032-4044	applications	
6-526	4045-4055	Proficient	
6-527	4056-4069	understanding	
6-528	4070-4072	of	
6-529	4073-4077	code	
6-530	4078-4088	versioning	
6-531	4089-4094	tools	
6-532	4095-4099	such	
6-533	4100-4102	as	
6-534	4103-4106	Git	
6-535	4107-4111	Your	
6-536	4112-4119	primary	
6-537	4120-4125	focus	
6-538	4126-4130	will	
6-539	4131-4133	be	
6-540	4134-4136	to	
6-541	4137-4146	implement	
6-542	4147-4148	a	
6-543	4149-4157	complete	
6-544	4158-4162	user	
6-545	4163-4172	interface	
6-546	4173-4175	in	
6-547	4176-4179	the	
6-548	4180-4184	form	
6-549	4185-4187	of	
6-550	4188-4189	a	
6-551	4190-4200	responsive	
6-552	4201-4207	mobile	
6-553	4208-4211	and	
6-554	4212-4219	desktop	
6-555	4220-4223	web	
6-556	4224-4227	app	
6-557	4227-4228	,	
6-558	4229-4233	with	
6-559	4234-4235	a	
6-560	4236-4241	focus	
6-561	4242-4244	on	
6-562	4245-4256	performance	
6-563	4257-4261	Your	
6-564	4262-4266	main	
6-565	4267-4273	duties	
6-566	4274-4278	will	
6-567	4279-4286	include	
6-568	4287-4295	creating	
6-569	4296-4303	modules	
6-570	4304-4307	and	
6-571	4308-4318	components	
6-572	4319-4322	and	
6-573	4323-4331	coupling	
6-574	4332-4336	them	
6-575	4337-4345	together	
6-576	4346-4350	into	
6-577	4351-4352	a	
6-578	4353-4363	functional	
6-579	4364-4371	Angular	
6-580	4372-4373	2	
6-581	4374-4385	application	
6-582	4386-4389	The	
6-583	4390-4398	artistic	
6-584	4399-4405	design	
6-585	4406-4409	and	
6-586	4410-4420	functional	
6-587	4421-4435	specifications	
6-588	4436-4440	will	
6-589	4441-4443	be	
6-590	4444-4453	delivered	
6-591	4454-4456	to	
6-592	4457-4460	you	
6-593	4460-4461	;	
6-594	4462-4464	it	
6-595	4465-4467	is	
6-596	4468-4472	your	
6-597	4473-4487	responsibility	
6-598	4488-4490	to	
6-599	4491-4500	implement	
6-600	4501-4504	the	
6-601	4505-4511	design	
6-602	4512-4515	and	
6-603	4516-4526	animations	
6-604	4527-4532	using	
6-605	4533-4537	SASS	
6-606	4537-4538	,	
6-607	4539-4549	TypeScript	
6-608	4549-4550	,	
6-609	4551-4554	and	
6-610	4555-4560	HTML5	
6-611	4561-4564	You	
6-612	4565-4569	will	
6-613	4570-4574	work	
6-614	4575-4577	in	
6-615	4578-4579	a	
6-616	4580-4584	team	
6-617	4585-4589	with	
6-618	4590-4593	the	
6-619	4594-4602	back-end	
6-620	4603-4612	developer	
6-621	4612-4613	,	
6-622	4614-4617	and	
6-623	4618-4629	communicate	
6-624	4630-4634	with	
6-625	4635-4638	the	
6-626	4639-4642	API	
6-627	4643-4648	using	
6-628	4649-4657	standard	
6-629	4658-4665	methods	
6-630	4666-4676	Delivering	
6-631	4677-4678	a	
6-632	4679-4687	complete	
6-633	4688-4693	front	
6-634	4694-4697	end	
6-635	4698-4709	application	
6-636	4710-4718	Ensuring	
6-637	4719-4723	high	
6-638	4724-4735	performance	
6-639	4736-4738	on	
6-640	4739-4745	mobile	
6-641	4746-4749	and	
6-642	4750-4757	desktop	
6-643	4758-4765	Writing	
6-644	4766-4772	tested	
6-645	4772-4773	,	
6-646	4774-4783	idiomatic	
6-647	4783-4784	,	
6-648	4785-4788	and	
6-649	4789-4799	documented	
6-650	4800-4810	TypeScript	
6-651	4810-4811	,	
6-652	4812-4816	HTML	
6-653	4817-4820	and	
6-654	4821-4825	SASS	
6-655	4826-4838	Coordinating	
6-656	4839-4842	the	
6-657	4843-4851	workflow	
6-658	4852-4856	with	
6-659	4857-4860	the	
6-660	4861-4867	design	
6-661	4868-4871	and	
6-662	4872-4874	QA	
6-663	4875-4880	teams	
6-664	4881-4892	Cooperating	
6-665	4893-4897	with	
6-666	4898-4901	the	
6-667	4902-4910	back-end	
6-668	4911-4920	developer	
6-669	4921-4923	in	
6-670	4924-4927	the	
6-671	4928-4935	process	
6-672	4936-4938	of	
6-673	4939-4947	building	
6-674	4948-4951	the	
6-675	4952-4959	RESTful	
6-676	4960-4963	API	
