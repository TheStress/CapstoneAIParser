#FORMAT=WebAnno TSV 3.3


#Text=Responsibilities Translate designs and wireframes into high quality code Design, build, and maintain high performance, reusable, and reliable Java code Ensure the best possible performance, quality, and responsiveness of the application Identify and correct bottlenecks and fix bugs Help maintain code quality, organization, and automatization Responsibilities Translate designs and wireframes into high quality code Design, build, and maintain high performance, reusable, and reliable Java code Ensure the best possible performance, quality, and responsiveness of the application Identify and correct bottlenecks and fix bugs Help maintain code quality, organization, and automatization
1-1	0-16	Responsibilities	
1-2	17-26	Translate	
1-3	27-34	designs	
1-4	35-38	and	
1-5	39-49	wireframes	
1-6	50-54	into	
1-7	55-59	high	
1-8	60-67	quality	
1-9	68-72	code	
1-10	73-79	Design	
1-11	79-80	,	
1-12	81-86	build	
1-13	86-87	,	
1-14	88-91	and	
1-15	92-100	maintain	
1-16	101-105	high	
1-17	106-117	performance	
1-18	117-118	,	
1-19	119-127	reusable	
1-20	127-128	,	
1-21	129-132	and	
1-22	133-141	reliable	
1-23	142-146	Java	
1-24	147-151	code	
1-25	152-158	Ensure	
1-26	159-162	the	
1-27	163-167	best	
1-28	168-176	possible	
1-29	177-188	performance	
1-30	188-189	,	
1-31	190-197	quality	
1-32	197-198	,	
1-33	199-202	and	
1-34	203-217	responsiveness	
1-35	218-220	of	
1-36	221-224	the	
1-37	225-236	application	
1-38	237-245	Identify	
1-39	246-249	and	
1-40	250-257	correct	
1-41	258-269	bottlenecks	
1-42	270-273	and	
1-43	274-277	fix	
1-44	278-282	bugs	
1-45	283-287	Help	
1-46	288-296	maintain	
1-47	297-301	code	
1-48	302-309	quality	
1-49	309-310	,	
1-50	311-323	organization	
1-51	323-324	,	
1-52	325-328	and	
1-53	329-343	automatization	
1-54	344-360	Responsibilities	
1-55	361-370	Translate	
1-56	371-378	designs	
1-57	379-382	and	
1-58	383-393	wireframes	
1-59	394-398	into	
1-60	399-403	high	
1-61	404-411	quality	
1-62	412-416	code	
1-63	417-423	Design	
1-64	423-424	,	
1-65	425-430	build	
1-66	430-431	,	
1-67	432-435	and	
1-68	436-444	maintain	
1-69	445-449	high	
1-70	450-461	performance	
1-71	461-462	,	
1-72	463-471	reusable	
1-73	471-472	,	
1-74	473-476	and	
1-75	477-485	reliable	
1-76	486-490	Java	
1-77	491-495	code	
1-78	496-502	Ensure	
1-79	503-506	the	
1-80	507-511	best	
1-81	512-520	possible	
1-82	521-532	performance	
1-83	532-533	,	
1-84	534-541	quality	
1-85	541-542	,	
1-86	543-546	and	
1-87	547-561	responsiveness	
1-88	562-564	of	
1-89	565-568	the	
1-90	569-580	application	
1-91	581-589	Identify	
1-92	590-593	and	
1-93	594-601	correct	
1-94	602-613	bottlenecks	
1-95	614-617	and	
1-96	618-621	fix	
1-97	622-626	bugs	
1-98	627-631	Help	
1-99	632-640	maintain	
1-100	641-645	code	
1-101	646-653	quality	
1-102	653-654	,	
1-103	655-667	organization	
1-104	667-668	,	
1-105	669-672	and	
1-106	673-687	automatization	
